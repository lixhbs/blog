<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>煮酒泛舟的技术栈</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lixhbs.gitee.io/blog/"/>
  <updated>2018-12-16T13:36:17.497Z</updated>
  <id>https://lixhbs.gitee.io/blog/</id>
  
  <author>
    <name>煮酒泛舟</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【Spring Cloud】第二篇 Circuit Breaker | 断路器 - Hystrix</title>
    <link href="https://lixhbs.gitee.io/blog/sc-f-e-02/"/>
    <id>https://lixhbs.gitee.io/blog/sc-f-e-02/</id>
    <published>2018-12-16T13:36:17.497Z</published>
    <updated>2018-12-16T13:36:17.497Z</updated>
    
    <content type="html"><![CDATA[<p>服务意外跪掉后的处理方式，不至于所有的功能失效。</p><a id="more"></a>  <p>官方网站的这个图很形象,当服务跪掉后有一个fallback返回。<br><img src="http://qiniuimages.aprcode.com/HystrixFallback.png" alt=""></p><p>本教程在<a href="https://github.com/lixhbs/SpringCloudEnglish/tree/master/sc-f-e-01" target="_blank" rel="noopener">【参照官方英文文档学Spring Cloud】第一篇 Service Discovery | 服务发现 - Eureka</a>的基础上添加代码。</p><h1 id="word-amp-phrase"><a href="#word-amp-phrase" class="headerlink" title="word &amp; phrase"></a>word &amp; phrase</h1><ul><li>Circuit Breaker 中断回路</li></ul><h3 id="创建工程-server-hystrix"><a href="#创建工程-server-hystrix" class="headerlink" title="创建工程 server-hystrix"></a>创建工程 <code>server-hystrix</code></h3><p><img src="http://qiniuimages.aprcode.com/20181024090732.png" alt=""></p><h3 id="How-to-Include-Hystrix-项目中如何包含-Hystrix"><a href="#How-to-Include-Hystrix-项目中如何包含-Hystrix" class="headerlink" title="How to Include Hystrix | 项目中如何包含 Hystrix"></a>How to Include Hystrix | 项目中如何包含 <code>Hystrix</code></h3><blockquote><p>To include Hystrix in your project, use the starter with a group ID of <code>org.springframework.cloud</code> and a artifact ID of <code>spring-cloud-starter-netflix-hystrix</code>. See the Spring Cloud Project page for details on setting up your build system with the current Spring Cloud Release Train.</p></blockquote><p>如何包含？第一步都一样，添加<code>group ID</code>到 <code>pom.xml</code>，注意自己的版本，我就不在翻译了。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cyinfotech<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>server-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>server-hystrix<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cyinfotech<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sc-f-e-02<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!--Eureka-Client--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改父工程<code>pom.xml</code>，在<code>modules</code>添加<code>server-hystrix</code> </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">module</span>&gt;</span>server-hystrix<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>The <code>@HystrixCommand</code> is provided by a Netflix contrib library called “javanica”. Spring Cloud automatically wraps Spring beans with that annotation in a proxy that is connected to the Hystrix circuit breaker. The circuit breaker calculates when to open and close the circuit and what to do in case of a failure.</p></blockquote><p>官方给的例子很直观，添加<code>@HystrixCommand</code>注解，当服务调用失败的时候会调用<code>fallbackMethod</code>的服务。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@Component</span><br><span class="line">public class StoreIntegration &#123;</span><br><span class="line"></span><br><span class="line">    @HystrixCommand(fallbackMethod = &quot;defaultStores&quot;)</span><br><span class="line">    public Object getStores(Map&lt;String, Object&gt; parameters) &#123;</span><br><span class="line">        //do stuff that might fail</span><br><span class="line">        // 做那些可能失败的事情</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Object defaultStores(Map&lt;String, Object&gt; parameters) &#123;</span><br><span class="line">        return /* something useful */;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>修改下官方<code>example</code>   </p><ul><li><p>新建类<code>StoreIntegration</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">package com.cyinfotech.serverhystrix;</span><br><span class="line"></span><br><span class="line">import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author 煮酒泛舟.</span><br><span class="line"> * @title Component</span><br><span class="line"> * @program sc-f-e-02</span><br><span class="line"> * @description</span><br><span class="line"> * @createtime 2018-10-24 09:28</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">@Component</span><br><span class="line">public class StoreIntegration &#123;</span><br><span class="line"></span><br><span class="line">    @HystrixCommand(fallbackMethod = &quot;defaultStores&quot;)</span><br><span class="line">    public Object getStores(Map&lt;String, Object&gt; parameters) &#123;</span><br><span class="line"></span><br><span class="line">        //do stuff that might fail</span><br><span class="line">        throw new RuntimeException(&quot;call service fail.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Object defaultStores(Map&lt;String, Object&gt; parameters) &#123;</span><br><span class="line"></span><br><span class="line">        /* something useful */</span><br><span class="line">        return &quot;Sorry, error!!! fallback defaultStores service！&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改启动类<code>ServerHystrixApplication</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyinfotech.serverhystrix;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.builder.SpringApplicationBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableCircuitBreaker</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerHystrixApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> SpringApplicationBuilder(ServerHystrixApplication.class).web(<span class="keyword">true</span>).run(args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    StoreIntegration storeIntegration;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getHi</span> <span class="params">(Map&lt;String, Object&gt; parameters)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> storeIntegration.getStores(parameters);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件 <code>application.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8782</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    serviceUrl:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://localhost:8761/eureka/</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">server-hystrix</span></span><br></pre></td></tr></table></figure></li><li><p>先启动 <code>eureka-server</code>，再启动 <code>server-hystrix</code>, 访问浏览器 <code>http://localhost:8782/</code>，显示的是调用<code>defaultStores</code>服务的返回值.</p><blockquote><p>Sorry, error!!! fallback defaultStores service！</p></blockquote></li></ul><p>本篇教程就到这，至于更深的教程我会加紧学习然后写出来。</p><p>欢迎关注我的公众号，跟我留言。<br><img src="http://qiniuimages.aprcode.com/qrcode_for_gh_22df58e4959f_258.jpg" alt=""></p><hr><p>博客地址：<a href="https://blog.aprcode.com/sc-f-e-02/" target="_blank" rel="noopener">https://blog.aprcode.com/sc-f-e-02/</a><br>教程源码Github地址：<a href="https://github.com/lixhbs/SpringCloudEnglish/tree/master/sc-f-e-02" target="_blank" rel="noopener">sc-f-e-02</a><br>教程源码Gitee地址：<a href="https://gitee.com/Lixhbs/SpringCloudEnglish/tree/master/sc-f-e-02" target="_blank" rel="noopener">sc-f-e-02</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;服务意外跪掉后的处理方式，不至于所有的功能失效。&lt;/p&gt;
    
    </summary>
    
      <category term="Spring Cloud" scheme="https://lixhbs.gitee.io/blog/categories/Spring-Cloud/"/>
    
    
      <category term="Spring Cloud" scheme="https://lixhbs.gitee.io/blog/tags/Spring-Cloud/"/>
    
  </entry>
  
  <entry>
    <title>【Spring Cloud】第三篇 Client Side Load Balancer | 负载均衡 - Ribbon</title>
    <link href="https://lixhbs.gitee.io/blog/sc-f-e-03/"/>
    <id>https://lixhbs.gitee.io/blog/sc-f-e-03/</id>
    <published>2018-12-16T13:36:09.162Z</published>
    <updated>2018-12-16T13:36:09.162Z</updated>
    
    <content type="html"><![CDATA[<p>Ribbon是一个负载均衡的客户端，用来提高系统的处理能力，在之后的章节会讲到<code>Feign</code>它已经包含<code>Ribbon</code>。</p><a id="more"></a>  <p>本教程在<a href="https://github.com/lixhbs/SpringCloudEnglish/tree/master/sc-f-e-02" target="_blank" rel="noopener">【Spring Cloud】第二篇 Circuit Breaker | 断路器 - Hystrix</a>的基础上添加代码。</p><h1 id="word-amp-phrase"><a href="#word-amp-phrase" class="headerlink" title="word &amp; phrase"></a>word &amp; phrase</h1><ul><li>load balancer 负载均衡器</li><li>section 章节</li><li>A central concept 核心想法</li></ul><h3 id="创建工程-server-ribbon"><a href="#创建工程-server-ribbon" class="headerlink" title="创建工程 server-ribbon"></a>创建工程 <code>server-ribbon</code></h3><p><img src="http://qiniuimages.aprcode.com/20181028090945.png" alt=""></p><h3 id="How-to-Include-Ribbon-项目中如何包含-Ribbon"><a href="#How-to-Include-Ribbon-项目中如何包含-Ribbon" class="headerlink" title="How to Include Ribbon | 项目中如何包含 Ribbon"></a>How to Include Ribbon | 项目中如何包含 <code>Ribbon</code></h3><blockquote><p>To include Ribbon in your project, use the starter with a group ID of <code>org.springframework.cloud</code> and an artifact ID of <code>spring-cloud-starter-netflix-ribbon</code>. See the <a href="http://projects.spring.io/spring-cloud/" target="_blank" rel="noopener">Spring Cloud Project page</a> for details on setting up your build system with the current Spring Cloud Release Train.</p></blockquote><p>添加<code>group ID</code>到 <code>pom.xml</code>，注意自己的版本。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cyinfotech<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>server-ribbon<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>server-ribbon<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cyinfotech<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sc-f-e-03<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-ribbon<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改父工程<code>pom.xml</code>，在<code>modules</code>添加<code>server-ribbon</code> </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">module</span>&gt;</span>server-ribbon<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>修改配置文件 <code>application.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8783</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    serviceUrl:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://localhost:8761/eureka/</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">server-ribbon</span></span><br></pre></td></tr></table></figure></li><li><p>修改启动类<code>ServerRibbonApplication</code>，添加<code>RestTemplate</code>    </p></li></ul><p><code>@LoadBalanced</code>的作用是让这个请求有负载均衡的能力。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyinfotech.serverribbon;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.loadbalancer.LoadBalanced;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerRibbonApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ServerRibbonApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@LoadBalanced</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestTemplate <span class="title">restTemplate</span> <span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>添加<code>HelloCyInfo</code>服务类，调用其他实例，实现负载均衡</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">package com.cyinfotech.serverribbon;</span><br><span class="line"></span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.stereotype.Service;</span><br><span class="line">import org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author 煮酒泛舟.</span><br><span class="line"> * @title</span><br><span class="line"> * @program sc-f-e-03</span><br><span class="line"> * @description</span><br><span class="line"> * @createtime 2018-10-28 09:38</span><br><span class="line"> */</span><br><span class="line">@Service</span><br><span class="line">public class HelloCyInfo &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    public String helloCYIT(String name) &#123;</span><br><span class="line">        return restTemplate.getForObject(&quot;http://server-hystrix/?name=&quot;+name,String.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>添加<code>RibbonController</code>类，调用<code>service</code></p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">package com.cyinfotech.serverribbon;</span><br><span class="line"></span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line">import org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author 煮酒泛舟.</span><br><span class="line"> * @title</span><br><span class="line"> * @program sc-f-e-03</span><br><span class="line"> * @description</span><br><span class="line"> * @createtime 2018-10-28 09:44</span><br><span class="line"> */</span><br><span class="line">@RestController</span><br><span class="line">public class RibbonController &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    HelloCyInfo helloCyInfo;</span><br><span class="line"></span><br><span class="line">    @RequestMapping(&quot;/&quot;)</span><br><span class="line">    public String hiCYIT ( @RequestParam String name) &#123;</span><br><span class="line"></span><br><span class="line">        return helloCyInfo.helloCYIT(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>为了效果明显我们修改下<code>server-hystrix</code>的代码，将实例的端口打印出来；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyinfotech.serverhystrix;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.builder.SpringApplicationBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableCircuitBreaker</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerHystrixApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> SpringApplicationBuilder(ServerHystrixApplication.class).web(<span class="keyword">true</span>).run(args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    StoreIntegration storeIntegration;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;server.port&#125;"</span>)</span><br><span class="line">    String port;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getHi</span> <span class="params">(@RequestParam String name)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"HI - "</span> + name + <span class="string">"， port:"</span> + port + <span class="string">", By server-hystrix."</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>先启动 <code>eureka-server</code>，再启动 <code>server-hystrix</code>, 然后启动 <code>server-ribbon</code> 访问浏览器 <code>http://localhost:8783/?name=cyit</code></p><blockquote><p>HI - cyit， port:8782, By server-hystrix.</p></blockquote></li><li><p>修改实例<code>server-hystrix</code>的端口然后启动，如果启动不了需要在<code>Configurations</code>去掉<code>Single instance only</code>.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8786</span></span><br></pre></td></tr></table></figure></li></ul><p>`</p><ul><li>多次访问<code>http://localhost:8783/?name=cyit</code> ， 页面会交替显示端口号。<blockquote><p>HI - cyit， port:8782, By server-hystrix.<br>HI - cyit， port:8786, By server-hystrix.</p></blockquote></li></ul><p>本篇教程就到这，至于更深的教程我会加紧学习然后写出来。</p><p>欢迎关注我的公众号，跟我留言。<br><img src="http://qiniuimages.aprcode.com/qrcode_for_gh_22df58e4959f_258.jpg" alt=""></p><hr><p>博客地址：<a href="https://blog.aprcode.com/sc-f-e-03/" target="_blank" rel="noopener">https://blog.aprcode.com/sc-f-e-03/</a><br>教程源码Github地址：<a href="https://github.com/lixhbs/SpringCloudEnglish/tree/master/sc-f-e-03" target="_blank" rel="noopener">sc-f-e-03</a><br>教程源码Gitee地址：<a href="https://gitee.com/Lixhbs/SpringCloudEnglish/tree/master/sc-f-e-03" target="_blank" rel="noopener">sc-f-e-03</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Ribbon是一个负载均衡的客户端，用来提高系统的处理能力，在之后的章节会讲到&lt;code&gt;Feign&lt;/code&gt;它已经包含&lt;code&gt;Ribbon&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="Spring Cloud" scheme="https://lixhbs.gitee.io/blog/categories/Spring-Cloud/"/>
    
      <category term="Ribbon" scheme="https://lixhbs.gitee.io/blog/categories/Spring-Cloud/Ribbon/"/>
    
    
      <category term="Spring Cloud" scheme="https://lixhbs.gitee.io/blog/tags/Spring-Cloud/"/>
    
  </entry>
  
  <entry>
    <title>「Feign-Http」 Feign请求http接口</title>
    <link href="https://lixhbs.gitee.io/blog/Feign-Http/"/>
    <id>https://lixhbs.gitee.io/blog/Feign-Http/</id>
    <published>2018-12-16T03:07:11.000Z</published>
    <updated>2018-12-20T03:50:47.173Z</updated>
    
    <content type="html"><![CDATA[<p>没有接触Spring Cloud Feign的时候调用其他公司接口都是用<code>java.net.URL</code>或者<code>org.apache.commons.httpclient</code>, 现在可以使用Feign，使用起来比较简单。</p><a id="more"></a><p>关于如何使用<code>Feign</code>可以查看<a href="https://blog.aprcode.com/sc-f-e-06/" target="_blank" rel="noopener">【Spring cloud】第六篇 Declarative REST Client | 声明性客户端 - Feign</a></p><p>新建<code>Spring cloud</code>基础项目    </p><h3 id="创建eureka-server工程"><a href="#创建eureka-server工程" class="headerlink" title="创建eureka-server工程"></a>创建<code>eureka-server</code>工程</h3><p>可以参考 <a href="https://blog.aprcode.com/sc-f-e-01/" target="_blank" rel="noopener">【Spring Cloud】第一篇 Service Discovery | 服务发现 - Eureka</a>      </p><h3 id="创建server-feign工程"><a href="#创建server-feign工程" class="headerlink" title="创建server-feign工程"></a>创建<code>server-feign</code>工程</h3><p>可以参考 <a href="https://blog.aprcode.com/sc-f-e-06/" target="_blank" rel="noopener">【Spring cloud】第六篇 Declarative REST Client | 声明性客户端 - Feign</a>    </p><ul><li>添加Feign接口 <code>com.cyinfotech.serverfeign.services.ApiOpenService.java</code></li></ul><p>在<code>@FeignClient</code> 设置<code>url</code>为http 基础地址，在各个方法上添加<code>@PostMapping</code>注解为<code>api</code>地址</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyinfotech.serverfeign.services;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.FeignClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 煮酒泛舟.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@title</span> ApiOpen</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@program</span> feign-http</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> ApiOpen</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@createtime</span> 2018-12-16 11:43</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@FeignClient</span>(url = <span class="string">"https://api.apiopen.top"</span>, value = <span class="string">"ApiOpenService"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ApiOpenService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 随机单句诗词推荐</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/singlePoetry"</span>)</span><br><span class="line">    <span class="function">String <span class="title">singlePoetry</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 随机一首诗词推荐</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/recommendPoetry"</span>)</span><br><span class="line">    <span class="function">String <span class="title">recommendPoetry</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 搜索古诗词</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/searchPoetry"</span>)</span><br><span class="line">    <span class="function">String <span class="title">searchPoetry</span><span class="params">(@RequestParam(<span class="string">"name"</span>)</span> String name)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在启动类添加测试代码<br>添加注解<code>@EnableFeignClients(clients = {ApiOpenService.class})</code></li></ul><pre><code class="java"><span class="keyword">package</span> com.cyinfotech.serverfeign;<span class="keyword">import</span> com.cyinfotech.serverfeign.services.ApiOpenService;<span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<span class="keyword">import</span> org.springframework.boot.SpringApplication;<span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;<span class="keyword">import</span> org.springframework.cloud.netflix.eureka.EnableEurekaClient;<span class="keyword">import</span> org.springframework.cloud.openfeign.EnableFeignClients;<span class="keyword">import</span> org.springframework.web.bind.annotation.*;<span class="comment">/**</span><span class="comment"> * <span class="doctag">@author</span> 煮酒泛舟</span><span class="comment"> * <span class="doctag">@date</span> 2018年12月16日11:49:06</span><span class="comment"> *</span><span class="comment"> */</span><span class="meta">@SpringBootApplication</span><span class="meta">@EnableEurekaClient</span><span class="meta">@RestController</span><span class="meta">@EnableFeignClients</span>(clients = {ApiOpenService.class})<span class="meta">@RequestMapping</span>(<span class="string">"/api"</span>)<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerFeignApplication</span> </span>{    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{        SpringApplication.run(ServerFeignApplication.class, args);    }    <span class="meta">@Autowired</span>    ApiOpenService apiOpenService;    <span class="meta">@RequestMapping</span>(<span class="string">"/singlePoetry"</span>)    <span class="function"><span class="keyword">public</span> String <span class="title">searchSinglePoetry</span><span class="params">()</span> </span>{        <span class="keyword">return</span> apiOpenService.singlePoetry();    }    <span class="meta">@RequestMapping</span>(<span class="string">"/recommendPoetry"</span>)    <span class="function"><span class="keyword">public</span> String <span class="title">searchRecommendPoetry</span><span class="params">()</span> </span>{        <span class="keyword">return</span> apiOpenService.recommendPoetry();    }    <span class="meta">@GetMapping</span>(<span class="string">"/searchPoetry"</span>)    <span class="function"><span class="keyword">public</span> String <span class="title">searchPoetry</span><span class="params">(@RequestParam(<span class="string">"name"</span>)</span> String name) </span>{        <span class="keyword">return</span> apiOpenService.searchPoetry(name);    }}</code></pre><p>启动 <code>EurekaServerApplication</code> &gt; <code>ServerFeignApplication</code>    </p><ul><li><p>访问：<a href="http://localhost:8085/api/singlePoetry" target="_blank" rel="noopener">http://localhost:8085/api/singlePoetry</a></p><blockquote><p>{“code”:200,”message”:”成功!”,”result”:{“author”:”苏轼”,”origin”:”临江仙·夜饮东坡醒复醉”,”category”:”古诗文-人生-梦想”,”content”:”长恨此身非我有，何时忘却营营。”}}</p></blockquote></li><li><p>访问：<a href="http://192.168.1.108:8085/api/recommendPoetry" target="_blank" rel="noopener">http://192.168.1.108:8085/api/recommendPoetry</a>     </p><blockquote><p>{“code”:200,”message”:”成功!”,”result”:{“title”:”送卢孟明还上都”,”content”:”江皋北风至，归客独伤魂。|楚水逢乡雁，平陵忆故园。|征骖嘶别馆，落日隐寒原。|应及秦川望，春华满国门。”,”authors”:”皎然”}}</p></blockquote></li><li><p>访问：<a href="http://192.168.1.108:8085/api/searchPoetry?name=黄鹤楼" target="_blank" rel="noopener">http://192.168.1.108:8085/api/searchPoetry?name=黄鹤楼</a>    </p><blockquote><p>{“code”:200,”message”:”成功!”,”result”:[{“title”:”黄鹤楼”,”content”:”黄鹤何年去杳冥，高楼千载倚江城。|碧云朝卷四山景，流水夜传三峡声。|柳暗西州供骋望，草芳南浦遍离情。|登临一晌须回首，看却乡心万感生。”,”authors”:”卢郢”},{“title”:”黄鹤楼”,”content”:”云锁吕公洞，月明黄鹤楼。|抱关非故卒，谁见羽衣游。”,”authors”:”王十朋”},{“title”:”黄鹤楼”,”content”:”手把仙人绿玉枝，吾行忽及早秋期。|苍龙阙角归何晚，黄鹤楼中醉不知。|江汉交流波渺渺，晋唐遗迹草离离。|平生最喜听长笛，裂石穿云何处吹。”,”authors”:”陆游”},{“title”:”黄鹤楼”,”content”:”长江巨浪拍天浮，城郭相望万景收。|汉水北吞云梦入，蜀江西带洞庭流。|角声交送千家月，帆影中分两岸秋。|黄鹤楼高人不见，却随鹦鹉过汀洲。”,”authors”:”游似”},{“title”:”黄鹤楼”,”content”:”翚飞栋宇据城端，车马尘中得异观。|双眼莫供淮地阔，一江不尽蜀波寒。|老仙横笛月亭午，骚客怀乡日欲残。|独抚遗踪增慨慕，徘徊不忍下层栏。”,”authors”:”罗与之”},{“title”:”黄鹤楼”,”content”:”崔颢题诗在上头，登临何必更冥搜。|楼前黄鹤不重见，槛外长江空自流。|万顷烟云连梦泽，一川风景借西州。”,”authors”:”张颙”},{“title”:”黄鹤楼”,”content”:”昔人已乘白云去，旧国连天不知处。|思量费子真仙子，从他浮世悲生死。|黄鹤一去不复返，光阴流转忽已晚。”,”authors”:”王得臣”},{“title”:”黄鹤楼”,”content”:”登真者谁子，昔有费公祎。|白日玉书下，青天驾鹤飞。|此地少留憩，神标怅依依。|振裾谢尘浊，与尔方远违。|层楼宠陈迹，江山长四围。|登临美商素，雨气薄西晖。|水落州觜嫩，风豪帆背肥。|飘然起遐想，琳馆閟岩扉。|明月识悠阔，白云疑是非。|金桃未遽熟，薤露虞先晞。|高树两华表，长招羽驾归。|灵瓢五色剂，定与遗民挥。|自顾乏仙质，延生犹可希。|刀圭傥不吝，如饱首阳饥。”,”authors”:”贺铸”}]}</p></blockquote></li></ul><hr><p>欢迎关注我的公众号，跟我留言。<br><img src="http://qiniuimages.aprcode.com/qrcode_for_gh_22df58e4959f_258.jpg" alt=""><br>博客地址：<a href="https://blog.aprcode.com/Feign-Http/" target="_blank" rel="noopener">https://blog.aprcode.com/Feign-Http/</a><br>教程源码Github地址：<a href="https://github.com/lixhbs/Feign-Http" target="_blank" rel="noopener">Feign-Http</a><br>教程源码Gitee地址：<a href="https://gitee.com/Lixhbs/Feign-Http" target="_blank" rel="noopener">Feign-Http</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;没有接触Spring Cloud Feign的时候调用其他公司接口都是用&lt;code&gt;java.net.URL&lt;/code&gt;或者&lt;code&gt;org.apache.commons.httpclient&lt;/code&gt;, 现在可以使用Feign，使用起来比较简单。&lt;/p&gt;
    
    </summary>
    
      <category term="Spring Cloud" scheme="https://lixhbs.gitee.io/blog/categories/Spring-Cloud/"/>
    
    
      <category term="Spring Cloud" scheme="https://lixhbs.gitee.io/blog/tags/Spring-Cloud/"/>
    
  </entry>
  
  <entry>
    <title>「Spring Boot」Docker配置SSL证书（免费证书）</title>
    <link href="https://lixhbs.gitee.io/blog/Spring-Boot-Docker-ssl/"/>
    <id>https://lixhbs.gitee.io/blog/Spring-Boot-Docker-ssl/</id>
    <published>2018-11-14T01:20:20.000Z</published>
    <updated>2018-12-20T03:52:10.759Z</updated>
    
    <content type="html"><![CDATA[<p>HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，要比HTTP协议安全。</p><a id="more"></a><p><strong>教程以阿里云为例</strong></p><p>备案域名后申请免费证书<br><img src="http://qiniuimages.aprcode.com/20181114153123.png" alt=""></p><p>购买证书<br><img src="http://qiniuimages.aprcode.com/20181114153350.png" alt=""></p><p>选择<code>Symantec</code> &gt; <code>免费型DV SSL</code><br><img src="http://qiniuimages.aprcode.com/20181114153534.png" alt=""></p><p>下载证书，以tomcat为例<br><img src="http://qiniuimages.aprcode.com/20181114153709.png" alt=""></p><p>以<a href="https://blog.aprcode.com/Spring-Boot-Docker-Aliyun" target="_blank" rel="noopener">「Spring Boot」 推送Docker镜像到阿里云镜像服务</a>项目代码为基础，新建<code>spring-boot-docker-ssl</code>项目<br> <img src="http://qiniuimages.aprcode.com/20181114153852.png" alt=""></p><p>配置<code>application.properties</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">server.port= 8099</span><br><span class="line"></span><br><span class="line">server.ssl.key-store= classpath:cert-1537941630836_www.aprcode.com.pfx</span><br><span class="line">server.ssl.key-store-password= MOi6arPC</span><br><span class="line">```    </span><br><span class="line"></span><br><span class="line">Docker打包和推送请参考上两篇文章：   </span><br><span class="line"></span><br><span class="line">[「Spring Boot」 Docker打包镜像](https://blog.aprcode.com/Spring-Boot-docker/)    </span><br><span class="line">[「Spring Boot」 推送Docker镜像到阿里云镜像服务](https://blog.aprcode.com/Spring-Boot-Docker-Aliyun) </span><br><span class="line"></span><br><span class="line">在服务器上登录镜像仓库获取最新镜像，并启动。   </span><br><span class="line">```shell</span><br><span class="line">[root@izwz99u47743ten25slpjpz ~]# docker images</span><br><span class="line">REPOSITORY                                          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">registry.cn-hangzhou.aliyuncs.com/aprcode/aprcode   aprcode.2.0.0       279964124c46        14 minutes ago      119MB</span><br><span class="line">registry.cn-hangzhou.aliyuncs.com/aprcode/aprcode   aprcode.1.0.0       671bc04fb203        6 hours ago         119MB</span><br></pre></td></tr></table></figure></p><p>访问<code>https://www.aprcode.com:8099/</code></p><blockquote><p><a href="https://www.aprcode.com:8099/" target="_blank" rel="noopener">https://www.aprcode.com:8099/</a></p></blockquote><hr><p>欢迎关注我的公众号，跟我留言。<br><img src="http://qiniuimages.aprcode.com/qrcode_for_gh_22df58e4959f_258.jpg" alt=""></p><p>博客地址：<a href="https://blog.aprcode.com/Spring-Boot-Docker-Aliyun" target="_blank" rel="noopener">Spring-Boot-Docker-Aliyun</a><br>教程源码Github地址：<a href="https://github.com/lixhbs/SpringBoot/tree/master/Spring-Boot-Docker-Aliyun" target="_blank" rel="noopener">Spring-Boot-Docker-Aliyun</a><br>教程源码Gitee地址：<a href="https://gitee.com/Lixhbs/SpringBoot/tree/master/Spring-Boot-Docker-Aliyun" target="_blank" rel="noopener">Spring-Boot-Docker-Aliyun</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，要比HTTP协议安全。&lt;/p&gt;
    
    </summary>
    
      <category term="Docker" scheme="https://lixhbs.gitee.io/blog/categories/Docker/"/>
    
    
      <category term="Spring Boot" scheme="https://lixhbs.gitee.io/blog/tags/Spring-Boot/"/>
    
      <category term="Docker" scheme="https://lixhbs.gitee.io/blog/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>「Spring Boot」 推送Docker镜像到阿里云镜像服务</title>
    <link href="https://lixhbs.gitee.io/blog/Spring-Boot-Docker-Aliyun/"/>
    <id>https://lixhbs.gitee.io/blog/Spring-Boot-Docker-Aliyun/</id>
    <published>2018-11-14T01:20:03.000Z</published>
    <updated>2018-12-20T03:51:16.412Z</updated>
    
    <content type="html"><![CDATA[<p>容器镜像服务（Container Registry）提供安全的应用镜像托管能力，精确的镜像安全扫描功能，稳定的镜像构建服务，便捷的镜像授权功能，方便用户进行镜像全生命周期管理。容器镜像服务简化了Registry的搭建运维工作，支持多地域的镜像托管，并联合容器服务等云产品，打造云上使用Docker的一体化体验。</p><a id="more"></a><h3 id="新建SpringBoot应用并配置DockerFile"><a href="#新建SpringBoot应用并配置DockerFile" class="headerlink" title="新建SpringBoot应用并配置DockerFile"></a>新建SpringBoot应用并配置DockerFile</h3><p>参考<a href="https://blog.aprcode.com/Spring-Boot-docker/" target="_blank" rel="noopener">「Spring Boot」 Docker打包镜像</a>，新建<code>Spring-Boot-Docker-Aliyun</code>项目<br><img src="http://qiniuimages.aprcode.com/20181114093241.png" alt=""></p><p>修改配置文件<code>application.properties</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server.port= 8099</span><br></pre></td></tr></table></figure></p><p>Docker 打包，打包过程参照<a href="https://blog.aprcode.com/Spring-Boot-docker/" target="_blank" rel="noopener">「Spring Boot」 Docker打包镜像</a></p><h3 id="开通阿里镜像服务"><a href="#开通阿里镜像服务" class="headerlink" title="开通阿里镜像服务"></a>开通阿里镜像服务</h3><p>访问<code>https://dev.aliyun.com/search.html</code>进入管理中心<br><img src="http://qiniuimages.aprcode.com/20181114102703.png" alt=""></p><p>创建命名空间<br><img src="http://qiniuimages.aprcode.com/20181114102809.png" alt=""></p><p>设置Registry登录密码，非阿里云登录密码<br><img src="http://qiniuimages.aprcode.com/20181114102909.png" alt=""></p><p>第一次创建会出现教程，和github 刚创建项目一样，会告知如果推送<br><img src="http://qiniuimages.aprcode.com/20181114103031.png" alt=""></p><h3 id="推送镜像"><a href="#推送镜像" class="headerlink" title="推送镜像"></a>推送镜像</h3><p>登录阿里云Docker Registry<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> docker login --username=134******93@163.com registry.cn-hangzhou.aliyuncs.com</span><br><span class="line"><span class="meta">$</span> Password: </span><br><span class="line"><span class="meta">$</span> Login Succeeded</span><br></pre></td></tr></table></figure></p><p>将镜像推送到Registry</p><blockquote><p>docker tag [ImageId] registry.cn-hangzhou.aliyuncs.com/aprcode/aprcode:[镜像版本号]</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> docker images</span><br><span class="line">REPOSITORY                          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">aprcode/spring-boot-docker-aliyun   latest              671bc04fb203        17 minutes ago      119MB</span><br><span class="line">openjdk                             8-jdk-alpine        97bc1352afde        2 weeks ago         103MB</span><br><span class="line"><span class="meta">$</span> docker tag 671bc04fb203 registry.cn-hangzhou.aliyuncs.com/aprcode/aprcode:aprcode.1.0.0</span><br><span class="line"><span class="meta">$</span> docker images</span><br><span class="line">REPOSITORY                                          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">aprcode/spring-boot-docker-aliyun                   latest              671bc04fb203        19 minutes ago      119MB</span><br><span class="line">registry.cn-hangzhou.aliyuncs.com/aprcode/aprcode   aprcode.1.0.0       671bc04fb203        19 minutes ago      119MB</span><br><span class="line">openjdk                                             8-jdk-alpine        97bc1352afde        2 weeks ago         103MB</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span> docker push registry.cn-hangzhou.aliyuncs.com/aprcode/aprcode:aprcode.1.0.0</span><br><span class="line">The push refers to repository [registry.cn-hangzhou.aliyuncs.com/aprcode/aprcode]</span><br><span class="line">5c52652cc20a: Pushed </span><br><span class="line">ed6f0bd39121: Layer already exists </span><br><span class="line">0c3170905795: Layer already exists </span><br><span class="line">df64d3292fd6: Layer already exists </span><br><span class="line">aprcode.1.0.0: digest: sha256:88df67826b192791332ee79659f091634f04764d6c3d0feacc5dfd0c8cab2333 size: 1159</span><br></pre></td></tr></table></figure><p>因为我之前推送了一个，所以显示已存在， 不影响。</p><h3 id="拉取镜像并启动"><a href="#拉取镜像并启动" class="headerlink" title="拉取镜像并启动"></a>拉取镜像并启动</h3><p>推送成功后可以在任何一个地方登录你的仓库拉取镜像了，接下来我登录我的阿里轻量应用服务器拉取我们推送的镜像，并启动。服务器已安装Docker</p><p>登录服务器<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> ssh root@***** -p 22</span><br><span class="line">root@******'s password:</span><br><span class="line">Last failed login: Wed Nov 14 10:54:19 CST 2018 from 59.173.241.186 on ssh:notty</span><br><span class="line">There were 2 failed login attempts since the last successful login.</span><br><span class="line">Last login: Wed Nov 14 08:41:08 2018 from 59.173.241.186</span><br><span class="line"></span><br><span class="line">Welcome to Alibaba Cloud Elastic Compute Service !</span><br><span class="line">[root@izwz99u47743ten25slpjpz ~]#</span><br></pre></td></tr></table></figure></p><p>登录阿里云Docker Registry</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@izwz99u47743ten25slpjpz ~]# docker login --username=134******93@163.com registry.cn-hangzhou.aliyuncs.com</span><br><span class="line">Password: </span><br><span class="line">Login Succeeded</span><br></pre></td></tr></table></figure><p>从Registry中拉取镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@izwz99u47743ten25slpjpz ~]# docker pull registry.cn-hangzhou.aliyuncs.com/aprcode/aprcode:aprcode.1.0.0</span><br><span class="line">aprcode.1.0.0: Pulling from aprcode/aprcode</span><br><span class="line">4fe2ade4980c: Already exists</span><br><span class="line">6fc58a8d4ae4: Already exists</span><br><span class="line">ef87ded15917: Already exists</span><br><span class="line">df60cf9e6a56: Pull complete</span><br><span class="line">Digest: sha256:88df67826b192791332ee79659f091634f04764d6c3d0feacc5dfd0c8cab2333</span><br><span class="line">Status: Downloaded newer image for registry.cn-hangzhou.aliyuncs.com/aprcode/aprcode:aprcode.1.0.0</span><br><span class="line">[root@izwz99u47743ten25slpjpz ~]#</span><br></pre></td></tr></table></figure><p>启动镜像<br>将80端口映射到内网8099 端口上<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@izwz99u47743ten25slpjpz ~]# docker run -d -p 80:8099 671bc04fb203</span><br><span class="line">d38062b4eb07a40f6a80ac28c4ec38d992bc534fd7645a34401e3dfb67492b92</span><br><span class="line">[root@izwz99u47743ten25slpjpz ~]#</span><br></pre></td></tr></table></figure></p><p>访问 <code>http://www.aprcode.com/</code>   </p><blockquote><p>{“name”:”aprcode.com”}</p></blockquote><p>欢迎关注我的公众号，跟我留言。<br><img src="http://qiniuimages.aprcode.com/qrcode_for_gh_22df58e4959f_258.jpg" alt=""></p><p>博客地址：<a href="https://blog.aprcode.com/Spring-Boot-Docker-Aliyun" target="_blank" rel="noopener">Spring-Boot-Docker-Aliyun</a><br>教程源码Github地址：<a href="https://github.com/lixhbs/SpringBoot/tree/master/Spring-Boot-Docker-Aliyun" target="_blank" rel="noopener">Spring-Boot-Docker-Aliyun</a><br>教程源码Gitee地址：<a href="https://gitee.com/Lixhbs/SpringBoot/tree/master/Spring-Boot-Docker-Aliyun" target="_blank" rel="noopener">Spring-Boot-Docker-Aliyun</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;容器镜像服务（Container Registry）提供安全的应用镜像托管能力，精确的镜像安全扫描功能，稳定的镜像构建服务，便捷的镜像授权功能，方便用户进行镜像全生命周期管理。容器镜像服务简化了Registry的搭建运维工作，支持多地域的镜像托管，并联合容器服务等云产品，打造云上使用Docker的一体化体验。&lt;/p&gt;
    
    </summary>
    
      <category term="Docker" scheme="https://lixhbs.gitee.io/blog/categories/Docker/"/>
    
    
      <category term="Spring Boot" scheme="https://lixhbs.gitee.io/blog/tags/Spring-Boot/"/>
    
      <category term="Docker" scheme="https://lixhbs.gitee.io/blog/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>【Spring cloud】第六篇 Declarative REST Client | 声明性客户端 - Feign</title>
    <link href="https://lixhbs.gitee.io/blog/sc-f-e-06/"/>
    <id>https://lixhbs.gitee.io/blog/sc-f-e-06/</id>
    <published>2018-11-06T04:00:00.000Z</published>
    <updated>2018-12-20T03:50:40.387Z</updated>
    
    <content type="html"><![CDATA[<p><code>Feign</code>是一个声明性<code>web</code>服务客户端。它使编写<code>web</code>服务更简单，使用<code>Feign</code>时需创建一个接口并注解，它具有可拔插的注解支持，包括Feign注解和JAX-RS注解。Feign还支持可插拔编码器和解码器。<code>Spring Cloud</code>增加了对<code>Spring MVC</code>注释的支持，并使用了<code>Spring Web中</code>默认使用的相同<code>HttpMessageConverters</code>，在使用<code>Feign</code>时，<code>Spring Cloud</code>集成了<code>Ribbon</code>和<code>Eureka</code>以提供<code>负载均衡</code>的<code>http客户端</code>。</p><a id="more"></a><blockquote><p>Feign is a declarative web service client. It makes writing web service clients easier. To use Feign create an interface and annotate it. It has pluggable annotation support including Feign annotations and JAX-RS annotations. Feign also supports pluggable encoders and decoders. Spring Cloud adds support for Spring MVC annotations and for using the same HttpMessageConverters used by default in Spring Web. Spring Cloud integrates Ribbon and Eureka to provide a load balanced http client when using Feign.</p></blockquote><p>本教程在<a href="https://github.com/lixhbs/SpringCloudEnglish/tree/master/sc-f-e-05" target="_blank" rel="noopener">【Spring cloud】第五篇 Custom Zuul Filter | 自定义过滤器</a>的基础上添加代码。</p><h3 id="How-to-Include-Feign-如何包含-Feign"><a href="#How-to-Include-Feign-如何包含-Feign" class="headerlink" title="How to Include Feign | 如何包含 Feign"></a>How to Include Feign | 如何包含 <code>Feign</code></h3><blockquote><p>To include Feign in your project use the starter with group <code>org.springframework.cloud</code> and artifact id <code>spring-cloud-starter-openfeign</code>. See the Spring Cloud Project page for details on setting up your build system with the current Spring Cloud Release Train.    </p></blockquote><p>在项目中使用<code>Feign</code>，需要配置 <code>pom.xml</code>, 根据你当前的<code>Spring Cloud</code>版本在<a href="http://projects.spring.io/spring-cloud/" target="_blank" rel="noopener">Spring Cloud Project page</a>中可以查看详细说明。    </p><p>创建<code>server-feign</code>工程<br><img src="http://qiniuimages.aprcode.com/20181106102243.png" alt=""></p><p>完整<code>pom.xml</code>    </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cyinfotech<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>server-feign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>server-feign<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cyinfotech<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sc-f-e-06<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Eureka-Client--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br><span class="line">```    </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">`ServerFeignApplication`添加注解</span><br></pre></td></tr></table></figure><p>package com.cyinfotech.serverfeign;</p><p>import org.springframework.boot.SpringApplication;<br>import org.springframework.boot.autoconfigure.SpringBootApplication;<br>import org.springframework.cloud.netflix.eureka.EnableEurekaClient;<br>import org.springframework.cloud.openfeign.EnableFeignClients;</p><p>@SpringBootApplication<br>@EnableFeignClients<br>@EnableEurekaClient<br>public class ServerFeignApplication {</p><pre><code>public static void main(String[] args) {    SpringApplication.run(ServerFeignApplication.class, args);}</code></pre><p>}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">添加如下配置文件`application.yml`    </span><br><span class="line"></span><br><span class="line">```yaml</span><br><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: server-feign</span><br><span class="line">server:</span><br><span class="line">  port: 8085</span><br><span class="line">eureka:</span><br><span class="line">  client:</span><br><span class="line">    serviceUrl:</span><br><span class="line">      defaultZone: http://localhost:8761/eureka/</span><br></pre></td></tr></table></figure><p>创建<code>Feign</code>服务接口<code>CyinfoService</code>，定义调用服务。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyinfotech.serverfeign;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.FeignClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"></span><br><span class="line"><span class="meta">@FeignClient</span>(<span class="string">"eureka-client"</span>)</span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CyinfoService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(method = RequestMethod.GET, value = <span class="string">"/hi"</span>)</span><br><span class="line">    <span class="function">String <span class="title">hi</span> <span class="params">(@RequestParam(value = <span class="string">"name"</span>)</span> String name)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">```    </span><br><span class="line"></span><br><span class="line">创建`Controller`</span><br></pre></td></tr></table></figure></p><p>package com.cyinfotech.serverfeign;</p><p>import org.springframework.beans.factory.annotation.Autowired;<br>import org.springframework.web.bind.annotation.RequestMapping;<br>import org.springframework.web.bind.annotation.RequestParam;<br>import org.springframework.web.bind.annotation.RestController;</p><p>/**</p><ul><li>@author 煮酒泛舟.</li><li>@title controller</li><li>@program sc-f-e-06</li><li>@description controller</li><li><p>@createtime 2018-11-06 10:38<br>*/<br>@RestController<br>public class CyinfoController {</p><p> @Autowired<br> CyinfoService cyinfoService;</p><p> @RequestMapping(value = “/hi”)<br> public String hi (@RequestParam(value = “name”) String name) {</p><pre><code>return cyinfoService.hi(name);</code></pre><p> }<br>}</p></li></ul><p><code>`</code></p><p>启动服务    </p><ul><li>eureka-server    </li><li>eureka-client    </li><li>server-feign    </li></ul><p>访问：<a href="http://localhost:8085/hi?name=cyinfo" target="_blank" rel="noopener">http://localhost:8085/hi?name=cyinfo</a></p><blockquote><p>Hello world, by eureka-client. name：cyinfo</p></blockquote><hr><p>欢迎关注我的公众号，跟我留言。<br><img src="http://qiniuimages.aprcode.com/qrcode_for_gh_22df58e4959f_258.jpg" alt=""></p><p>博客地址：<a href="https://blog.aprcode.com/sc-f-e-06/" target="_blank" rel="noopener">https://blog.aprcode.com/sc-f-e-06/</a><br>教程源码Github地址：<a href="https://github.com/lixhbs/SpringCloudEnglish/tree/master/sc-f-e-06" target="_blank" rel="noopener">sc-f-e-06</a><br>教程源码Gitee地址：<a href="https://gitee.com/Lixhbs/SpringCloudEnglish/tree/master/sc-f-e-06" target="_blank" rel="noopener">sc-f-e-06</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;Feign&lt;/code&gt;是一个声明性&lt;code&gt;web&lt;/code&gt;服务客户端。它使编写&lt;code&gt;web&lt;/code&gt;服务更简单，使用&lt;code&gt;Feign&lt;/code&gt;时需创建一个接口并注解，它具有可拔插的注解支持，包括Feign注解和JAX-RS注解。Feign还支持可插拔编码器和解码器。&lt;code&gt;Spring Cloud&lt;/code&gt;增加了对&lt;code&gt;Spring MVC&lt;/code&gt;注释的支持，并使用了&lt;code&gt;Spring Web中&lt;/code&gt;默认使用的相同&lt;code&gt;HttpMessageConverters&lt;/code&gt;，在使用&lt;code&gt;Feign&lt;/code&gt;时，&lt;code&gt;Spring Cloud&lt;/code&gt;集成了&lt;code&gt;Ribbon&lt;/code&gt;和&lt;code&gt;Eureka&lt;/code&gt;以提供&lt;code&gt;负载均衡&lt;/code&gt;的&lt;code&gt;http客户端&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="Spring Cloud" scheme="https://lixhbs.gitee.io/blog/categories/Spring-Cloud/"/>
    
    
      <category term="Spring Cloud" scheme="https://lixhbs.gitee.io/blog/tags/Spring-Cloud/"/>
    
  </entry>
  
  <entry>
    <title>「leetcode」反转整数</title>
    <link href="https://lixhbs.gitee.io/blog/leetcode-002/"/>
    <id>https://lixhbs.gitee.io/blog/leetcode-002/</id>
    <published>2018-11-05T11:00:00.000Z</published>
    <updated>2018-11-05T01:34:44.684Z</updated>
    
    <content type="html"><![CDATA[<h3 id="给定一个-32-位有符号整数，将整数中的数字进行反转。"><a href="#给定一个-32-位有符号整数，将整数中的数字进行反转。" class="headerlink" title="给定一个 32 位有符号整数，将整数中的数字进行反转。"></a>给定一个 32 位有符号整数，将整数中的数字进行反转。</h3><a id="more"></a><p><strong>示例 1:</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: 123</span><br><span class="line">输出: 321</span><br></pre></td></tr></table></figure></p><p><strong>示例 2:</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: -123</span><br><span class="line">输出: -321</span><br></pre></td></tr></table></figure></p><p><strong>示例 1:</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: 120</span><br><span class="line">输出: 21</span><br></pre></td></tr></table></figure></p><p>注意:</p><p>假设我们的环境只能存储32位有符号整数，其数值范围是 [−2<code>31</code>,  2<code>31</code>−1]。根据这个假设，如果反转后的整数溢出，则返回 0。   </p><h3 id="方法：弹出和推入数字-amp-溢出前进行检查"><a href="#方法：弹出和推入数字-amp-溢出前进行检查" class="headerlink" title="方法：弹出和推入数字 &amp; 溢出前进行检查"></a>方法：弹出和推入数字 &amp; 溢出前进行检查</h3><p><strong>思路</strong></p><p>我们可以一次构建反转整数的一位数字。在这样做的时候，我们可以预先检查向原整数附加另一位数字是否会导致溢出。   </p><p><strong>算法</strong></p><p>反转整数的方法可以与反转字符串进行类比。   </p><p>我们想重复“弹出” xx 的最后一位数字，并将它“推入”到 rev 的后面。最后，rev 将与 x相反。   </p><p>要在没有辅助堆栈/数组的帮助下 “弹出” 和 “推入” 数字，我们可以使用数学方法。   </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//pop operation:</span><br><span class="line">pop = x % 10;</span><br><span class="line">x /= 10;</span><br><span class="line"></span><br><span class="line">//push operation:</span><br><span class="line">temp = rev * 10 + pop;</span><br><span class="line">rev = temp;</span><br></pre></td></tr></table></figure><p>但是，这种方法很危险，因为当 <code>temp=rev⋅10+pop</code> 时会导致溢出。   </p><p>幸运的是，事先检查这个语句是否会导致溢出很容易。   </p><p><img src="http://paz1myrij.bkt.clouddn.com/20181105091407.png" alt=""></p><p>将输入值取余与rev*10相加翻转数，判断翻转的📚是否大于int的最大值和小于最小值.<br>Integer.MIN_VALUE = -2147483648.<br>Integer.MAX_VALUE = 2147483647.<br>所以 当x &lt; (Integer.MIN_VALUE / 10 = -8) 时就会溢出.<br>所以 当x &gt; (Integer.MAX_VALUE / 10 = 7) 时就会溢出.   </p><pre><code> class Solution {    public int reverse(int x) {        int rev = 0;        while (x != 0) {            int pop = x % 10;            x /= 10;            if (rev &gt; Integer.MAX_VALUE/10 || (rev == Integer.MAX_VALUE / 10 &amp;&amp; pop &gt; 7)) return 0;            if (rev &lt; Integer.MIN_VALUE/10 || (rev == Integer.MIN_VALUE / 10 &amp;&amp; pop &lt; -8)) return 0;            rev = rev * 10 + pop;        }        return rev;    }}</code></pre><p><img src="http://paz1myrij.bkt.clouddn.com/20181105091537.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;给定一个-32-位有符号整数，将整数中的数字进行反转。&quot;&gt;&lt;a href=&quot;#给定一个-32-位有符号整数，将整数中的数字进行反转。&quot; class=&quot;headerlink&quot; title=&quot;给定一个 32 位有符号整数，将整数中的数字进行反转。&quot;&gt;&lt;/a&gt;给定一个 32 位有符号整数，将整数中的数字进行反转。&lt;/h3&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>「leetcode」两数之和</title>
    <link href="https://lixhbs.gitee.io/blog/leetcode-001/"/>
    <id>https://lixhbs.gitee.io/blog/leetcode-001/</id>
    <published>2018-10-31T02:04:19.000Z</published>
    <updated>2018-11-05T01:19:08.245Z</updated>
    
    <content type="html"><![CDATA[<p>给定一个整数数组和一个目标值，找出数组中和为目标值的两个数。    </p><p>你可以假设每个输入只对应一种答案，且同样的元素不能被重复利用。    </p><a id="more"></a><p><strong>示例:</strong>    </p><blockquote><p>给定 nums = [2, 7, 11, 15], target = 9</p><p>因为 nums[0] + nums[1] = 2 + 7 = 9<br>所以返回 [0, 1]</p></blockquote><p><strong>我的解答（暴力）</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target) &#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> m = i + <span class="number">1</span>; m &lt; n; m++) &#123;</span><br><span class="line">                <span class="keyword">if</span> ( target - nums[m] == nums[i] ) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;i, m&#125;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>题目理解</strong></p><p>计算出这个数组中两个数字之和为目标数的索引，<strong>数组中同样的元素不能复用</strong>。</p><p><strong>官方答案</strong></p><blockquote><p>方法一：</p></blockquote><p>暴力解法，循环两次，耗时比较长。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">public int[] twoSum(int[] nums, int target) &#123;</span><br><span class="line">   for (int i = 0; i &lt; nums.length; i++) &#123;</span><br><span class="line">       for (int j = i + 1; j &lt; nums.length; j++) &#123;</span><br><span class="line">           if (nums[j] == target - nums[i]) &#123;</span><br><span class="line">               return new int[] &#123; i, j &#125;;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   throw new IllegalArgumentException(&quot;No two sum solution&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>方法二</p></blockquote><p>可以用哈希表存储元素和对应索引的位置，然后循环比对。由于先将所有的数据都存入<code>HashMap</code>，所以后面判断的时候需要判断是否重复使用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target) &#123;</span><br><span class="line">    Map&lt;Integer, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">        map.put(nums[i], i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> complement = target - nums[i];</span><br><span class="line">        <span class="keyword">if</span> (map.containsKey(complement) &amp;&amp; map.get(complement) != i) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[] &#123; i, map.get(complement) &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"No two sum solution"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>方法三</p></blockquote><p>参照第二种方法，我们可以一次完成，将目标值和元素的差在<code>HashMap</code>中查找，如果没有则放入<code>HashMap</code>中供下次查找。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target) &#123;</span><br><span class="line">    Map&lt;Integer, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> complement = target - nums[i];</span><br><span class="line">        <span class="keyword">if</span> (map.containsKey(complement)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[] &#123; map.get(complement), i &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        map.put(nums[i], i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"No two sum solution"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;给定一个整数数组和一个目标值，找出数组中和为目标值的两个数。    &lt;/p&gt;
&lt;p&gt;你可以假设每个输入只对应一种答案，且同样的元素不能被重复利用。    &lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>【Spring cloud】第五篇 Custom Zuul Filter | 自定义过滤器</title>
    <link href="https://lixhbs.gitee.io/blog/sc-f-e-05/"/>
    <id>https://lixhbs.gitee.io/blog/sc-f-e-05/</id>
    <published>2018-10-30T10:00:00.000Z</published>
    <updated>2018-12-20T03:50:36.430Z</updated>
    
    <content type="html"><![CDATA[<p>Zuul可以分为四种过滤类型：<code>pre</code>、<code>route</code>、<code>post</code>和<code>error</code>，可以根据项目实际情况选择不同的过滤类型，也可以按照<code>filterOrder</code>排序。</p><a id="more"></a><p>本教程在<a href="https://github.com/lixhbs/SpringCloudEnglish/tree/master/sc-f-e-04" target="_blank" rel="noopener">【Spring cloud】第四篇 Router and Filter | 路由和过滤器 - Zuul</a>的基础上添加代码。</p><h3 id="Custom-Zuul-Filter-Examples"><a href="#Custom-Zuul-Filter-Examples" class="headerlink" title="Custom Zuul Filter Examples"></a>Custom Zuul Filter Examples</h3><p>本篇将调试四种过滤类型。</p><blockquote><p>to classify a filter by type. Standard types in Zuul are “pre” for pre-routing filtering, “route” for routing to an origin, “post” for post-routing filters, “error” for error handling. We also support a “static” type for static responses see  StaticResponseFilter. Any filterType made be created or added and run by calling FilterProcessor.runFilters(type)</p></blockquote><ul><li>pre - 预路由过滤</li><li>route - 路由中</li><li>post - 路由后</li><li>error - 错误处理<br><img src="http://qiniuimages.aprcode.com/b4c1d2d1-547b-3ed5-a8da-5b8876c3a46b.png" alt="（图片来源互联网）"></li></ul><h3 id="How-to-Write-a-Pre-Filter"><a href="#How-to-Write-a-Pre-Filter" class="headerlink" title="How to Write a Pre Filter"></a>How to Write a Pre Filter</h3><blockquote><p>Pre filters set up data in the RequestContext for use in filters downstream. The main use case is to set information required for route filters</p></blockquote><p>预过滤器在RequestContext中设置数据，以便在下游过滤器中使用。主要用例是设置路由过滤器所需的信息</p><p>在<code>server-zuul</code>工程中新建类<code>preZuulServer</code>    </p><p>可以在访问路有前校验是否有权限访问等操作。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">@Component</span><br><span class="line">public class preZuulFilter extends ZuulFilter &#123;</span><br><span class="line">   @Override</span><br><span class="line">   public String filterType() &#123;</span><br><span class="line">       return PRE_TYPE;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   @Override</span><br><span class="line">   public int filterOrder() &#123;</span><br><span class="line">       // 过滤顺序</span><br><span class="line">       return 0;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   @Override</span><br><span class="line">   public boolean shouldFilter() &#123;</span><br><span class="line">       // 是否过滤</span><br><span class="line">       return true;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   @Override</span><br><span class="line">   public Object run() throws ZuulException &#123;</span><br><span class="line"></span><br><span class="line">       RequestContext requestContext = RequestContext.getCurrentContext();</span><br><span class="line">       HttpServletRequest request = requestContext.getRequest();</span><br><span class="line"></span><br><span class="line">       String name = request.getParameter(&quot;name&quot;);</span><br><span class="line"></span><br><span class="line">       if (StringUtils.isNotEmpty(name) &amp;&amp; name.equals(&quot;CHYIT&quot;)) &#123;</span><br><span class="line">           requestContext.setSendZuulResponse(true);</span><br><span class="line">       &#125; else &#123;</span><br><span class="line">           requestContext.setSendZuulResponse(false);</span><br><span class="line">           try &#123;</span><br><span class="line">               HttpServletResponse res = requestContext.getResponse();</span><br><span class="line">               res.setContentType(&quot;text/html;charset=UTF-8&quot;);</span><br><span class="line">               res.setCharacterEncoding(&quot;UTF-8&quot;);</span><br><span class="line">               res.getWriter().write(&quot;用户校验不通过！！！&quot;);</span><br><span class="line">           &#125; catch (IOException e) &#123;</span><br><span class="line">               e.printStackTrace();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       return null;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>修改<code>eureka-client</code> <code>EurekaClientApplication</code>类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public class EurekaClientApplication &#123;</span><br><span class="line"></span><br><span class="line">   @RequestMapping(&quot;/hi&quot;)</span><br><span class="line">   public String home(String name) &#123;</span><br><span class="line">       return &quot;Hello world, by eureka-client. name：&quot; + name;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   public static void main(String[] args) &#123;</span><br><span class="line">       new SpringApplicationBuilder(EurekaClientApplication.class).web(true).run(args);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问：<a href="http://192.168.5.165:8084/ec/hi?name=name" target="_blank" rel="noopener">http://192.168.5.165:8084/ec/hi?name=name</a>    </p><blockquote><p>用户校验不通过！！！</p></blockquote><p>放问：<a href="http://192.168.5.165:8084/ec/hi?name=CHYIT" target="_blank" rel="noopener">http://192.168.5.165:8084/ec/hi?name=CHYIT</a></p><blockquote><p>Hello world, by eureka-client. name：CHYIT</p></blockquote><p>然后创建另外三个类型的过滤类   </p><p><img src="http://qiniuimages.aprcode.com/20181101182224.png" alt=""></p><p>启动顺序<code>eureka-server</code> &gt; <code>server-zuul</code></p><p>放问：<a href="http://192.168.5.165:8084/ec/hi?name=CHYIT" target="_blank" rel="noopener">http://192.168.5.165:8084/ec/hi?name=CHYIT</a>   </p><blockquote><p>GET &gt;&gt;&gt; run by PRE_TYPE<br>GET &gt;&gt;&gt; run by ROUTE_TYPE<br>GET &gt;&gt;&gt; run by ERROR_TYPE   </p></blockquote><p>然后启动<code>eureka-client</code></p><blockquote><p>GET &gt;&gt;&gt; run by PRE_TYPE<br>GET &gt;&gt;&gt; run by ROUTE_TYPE<br>GET &gt;&gt;&gt; run by POST_TYPE   </p></blockquote><hr><p>欢迎关注我的公众号，跟我留言。<br><img src="http://qiniuimages.aprcode.com/qrcode_for_gh_22df58e4959f_258.jpg" alt=""><br>博客地址：<a href="https://blog.aprcode.com/sc-f-e-05/" target="_blank" rel="noopener">https://blog.aprcode.com/sc-f-e-05/</a><br>教程源码Github地址：<a href="https://github.com/lixhbs/SpringCloudEnglish/tree/master/sc-f-e-05" target="_blank" rel="noopener">sc-f-e-05</a><br>教程源码Gitee地址：<a href="https://gitee.com/Lixhbs/SpringCloudEnglish/tree/master/sc-f-e-05" target="_blank" rel="noopener">sc-f-e-05</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Zuul可以分为四种过滤类型：&lt;code&gt;pre&lt;/code&gt;、&lt;code&gt;route&lt;/code&gt;、&lt;code&gt;post&lt;/code&gt;和&lt;code&gt;error&lt;/code&gt;，可以根据项目实际情况选择不同的过滤类型，也可以按照&lt;code&gt;filterOrder&lt;/code&gt;排序。&lt;/p&gt;
    
    </summary>
    
      <category term="Spring Cloud" scheme="https://lixhbs.gitee.io/blog/categories/Spring-Cloud/"/>
    
    
      <category term="Spring Cloud" scheme="https://lixhbs.gitee.io/blog/tags/Spring-Cloud/"/>
    
  </entry>
  
  <entry>
    <title>【Spring cloud】第四篇 Router and Filter | 路由和过滤器 - Zuul</title>
    <link href="https://lixhbs.gitee.io/blog/sc-f-e-04/"/>
    <id>https://lixhbs.gitee.io/blog/sc-f-e-04/</id>
    <published>2018-10-29T07:00:01.000Z</published>
    <updated>2018-12-20T03:56:31.553Z</updated>
    
    <content type="html"><![CDATA[<p>路由是微服务架构不可或缺的一部分。例如，<code>/</code>可以映射到您的Web应用程序，<code>/api/users</code>映射到用户服务，<code>/api/shop</code>映射到商店服务。 <code>Zuul</code>是<code>Netflix</code>的基于<code>JVM</code>的路由器和服务器端负载均衡器</p><blockquote><p>Routing is an integral part of a microservice architecture. For example, / may be mapped to your web application, /api/users is mapped to the user service and /api/shop is mapped to the shop service. Zuul is a JVM-based router and server-side load balancer from Netflix.</p></blockquote><a id="more"></a><p>本教程在<a href="https://github.com/lixhbs/SpringCloudEnglish/tree/master/sc-f-e-03" target="_blank" rel="noopener">【Spring Cloud】第三篇 Client Side Load Balancer | 负载均衡 - Ribbon</a>的基础上添加代码。</p><h3 id="How-to-Include-Zuul-项目中如何包含-Zuul"><a href="#How-to-Include-Zuul-项目中如何包含-Zuul" class="headerlink" title="How to Include Zuul | 项目中如何包含 Zuul"></a>How to Include Zuul | 项目中如何包含 <code>Zuul</code></h3><blockquote><p>To include Zuul in your project, use the starter with a group ID of <code>org.springframework.cloud</code> and an artifact ID of <code>spring-cloud-starter-netflix-zuul</code>. See the <a href="http://projects.spring.io/spring-cloud/" target="_blank" rel="noopener">Spring Cloud Project page</a> for details on setting up your build system with the current Spring Cloud Release Train.</p></blockquote><p>添加<code>group ID</code>到 <code>pom.xml</code>，注意自己的版本。</p><h4 id="Zuul有几种配置的方式"><a href="#Zuul有几种配置的方式" class="headerlink" title="Zuul有几种配置的方式"></a>Zuul有几种配置的方式</h4><p>跳过自动添加服务，将<code>zuul.ignored-services</code> 设置服务<code>id</code>列表的模式，如<code>zuul.ignored-services = server-consume</code>或<code>zuul.ignored-services = *</code> 将忽略掉指定或所有的服务，但是如果在路由列表中添加了指定的路由，将不会被忽略，如下所示,除<code>users</code>外将忽略所有服务。 </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">zuul:</span></span><br><span class="line"><span class="attr">  ignoredServices:</span> <span class="string">'*'</span></span><br><span class="line"><span class="attr">  routes:</span></span><br><span class="line"><span class="attr">    users:</span> <span class="string">/myusers/**</span></span><br></pre></td></tr></table></figure><p>要增加或者修改路由器规则，可以添加如下配置，浏览器访问<code>/myusers</code>会转发到<code>users</code>服务，如：<code>/myusers/101</code>转发到<code>/101</code>）。<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">zuul:</span></span><br><span class="line"><span class="attr">  routes:</span></span><br><span class="line"><span class="attr">    users:</span> <span class="string">/myusers/**</span></span><br></pre></td></tr></table></figure></p><p>要对路由器进行更精细的操作，可以指定独立的路径和ServerID（Eureka 服务发现），如下配置：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">zuul:</span></span><br><span class="line"><span class="attr">  routes:</span></span><br><span class="line"><span class="attr">    users:</span></span><br><span class="line"><span class="attr">      path:</span> <span class="string">/myusers/**</span></span><br><span class="line"><span class="attr">      serviceId:</span> <span class="string">users_service</span></span><br></pre></td></tr></table></figure></p><p>也可以直接配置http路径的物理位置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">zuul:</span></span><br><span class="line"><span class="attr"> routes:</span></span><br><span class="line"><span class="attr">   users:</span></span><br><span class="line"><span class="attr">     path:</span> <span class="string">/myusers/**</span></span><br><span class="line"><span class="attr">     url:</span> <span class="attr">http://example.com/users_service</span></span><br></pre></td></tr></table></figure><h3 id="实际操作"><a href="#实际操作" class="headerlink" title="实际操作"></a>实际操作</h3><p>创建<code>server-zuul</code>工程<br><img src="http://qiniuimages.aprcode.com/20181029161740.png" alt=""></p><p>完整<code>pom.xml</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cyinfotech<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>server-zuul<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>server-zuul<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cyinfotech<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sc-f-e-04<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-zuul<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--Eureka-Client--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>修改父工程<code>pom.xml</code>，在<code>modules</code>添加<code>server-ribbon</code> </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">module</span>&gt;</span>server-zuul<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改<code>ServerZuulApplication</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">package com.cyinfotech.serverzuul;</span><br><span class="line">   </span><br><span class="line">   import org.springframework.boot.SpringApplication;</span><br><span class="line">   import org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line">   import org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line">   import org.springframework.cloud.netflix.zuul.EnableZuulProxy;</span><br><span class="line">   </span><br><span class="line">   @SpringBootApplication</span><br><span class="line">   @EnableDiscoveryClient</span><br><span class="line">   @EnableZuulProxy</span><br><span class="line">   public class ServerZuulApplication &#123;</span><br><span class="line">   </span><br><span class="line">       public static void main(String[] args) &#123;</span><br><span class="line">           SpringApplication.run(ServerZuulApplication.class, args);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p><p>在<code>application.yml</code>中添加路由规则</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">server-zuul</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8084</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    serviceUrl:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://localhost:8761/eureka/</span></span><br><span class="line"><span class="attr">zuul:</span></span><br><span class="line"><span class="attr">  routes:</span></span><br><span class="line"><span class="attr">    aa:</span></span><br><span class="line"><span class="attr">      path:</span> <span class="string">/hy/**</span></span><br><span class="line"><span class="attr">      serviceId:</span> <span class="string">server-hystrix</span></span><br><span class="line"><span class="attr">    bb:</span></span><br><span class="line"><span class="attr">      path:</span> <span class="string">/ec/**</span></span><br><span class="line"><span class="attr">      serviceId:</span> <span class="string">eureka-client</span></span><br></pre></td></tr></table></figure><p>分别在<code>server-hystrix</code>和<code>eureka-client</code>中添加<code>hi</code>服务路径</p><p><strong>ServerHystrixApplication</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">package com.cyinfotech.serverhystrix;</span><br><span class="line"></span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.beans.factory.annotation.Value;</span><br><span class="line">import org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line">import org.springframework.boot.builder.SpringApplicationBuilder;</span><br><span class="line">import org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker;</span><br><span class="line">import org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line">import org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">@SpringBootApplication</span><br><span class="line">@EnableCircuitBreaker</span><br><span class="line">@EnableDiscoveryClient</span><br><span class="line">@RestController</span><br><span class="line">public class ServerHystrixApplication &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        new SpringApplicationBuilder(ServerHystrixApplication.class).web(true).run(args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    StoreIntegration storeIntegration;</span><br><span class="line"></span><br><span class="line">    @Value(&quot;$&#123;server.port&#125;&quot;)</span><br><span class="line">    String port;</span><br><span class="line"></span><br><span class="line">    @RequestMapping(&quot;/&quot;)</span><br><span class="line">    public Object getHi (@RequestParam String name)&#123;</span><br><span class="line"></span><br><span class="line">        return &quot;HI - &quot; + name + &quot;， port:&quot; + port + &quot;, By server-hystrix.&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @RequestMapping(&quot;/hi&quot;)</span><br><span class="line">    public Object hi ()&#123;</span><br><span class="line"></span><br><span class="line">        return &quot;HI, By server-hystrix.&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>EurekaClientApplication</strong></p><pre><code>package com.cyinfotech.eurekaclient;import org.springframework.boot.autoconfigure.SpringBootApplication;import org.springframework.boot.builder.SpringApplicationBuilder;import org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker;import org.springframework.cloud.client.discovery.EnableDiscoveryClient;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;@SpringBootApplication@EnableDiscoveryClient@RestControllerpublic class EurekaClientApplication {    @RequestMapping(&quot;/hi&quot;)    public String home() {        return &quot;Hello world, by eureka-client.&quot;;    }    public static void main(String[] args) {        new SpringApplicationBuilder(EurekaClientApplication.class).web(true).run(args);    }}</code></pre><p>访问路由路径:<code>http://localhost:8084/ec/hi</code></p><blockquote><p>Hello world, by eureka-client.</p></blockquote><p>访问路由路径:<code>http://localhost:8084/hy/hi</code></p><blockquote><p>HI, By server-hystrix.</p></blockquote><p>本篇教程就到这，至于更深的教程我会加紧学习然后写出来。</p><hr><p>欢迎关注我的公众号，跟我留言。<br><img src="http://qiniuimages.aprcode.com/qrcode_for_gh_22df58e4959f_258.jpg" alt=""></p><p>博客地址：<a href="https://blog.aprcode.com/sc-f-e-04/" target="_blank" rel="noopener">https://blog.aprcode.com/sc-f-e-04/</a><br>教程源码Github地址：<a href="https://github.com/lixhbs/SpringCloudEnglish/tree/master/sc-f-e-04" target="_blank" rel="noopener">sc-f-e-04</a><br>教程源码Gitee地址：<a href="https://gitee.com/Lixhbs/SpringCloudEnglish/tree/master/sc-f-e-04" target="_blank" rel="noopener">sc-f-e-04</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;路由是微服务架构不可或缺的一部分。例如，&lt;code&gt;/&lt;/code&gt;可以映射到您的Web应用程序，&lt;code&gt;/api/users&lt;/code&gt;映射到用户服务，&lt;code&gt;/api/shop&lt;/code&gt;映射到商店服务。 &lt;code&gt;Zuul&lt;/code&gt;是&lt;code&gt;Netflix&lt;/code&gt;的基于&lt;code&gt;JVM&lt;/code&gt;的路由器和服务器端负载均衡器&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Routing is an integral part of a microservice architecture. For example, / may be mapped to your web application, /api/users is mapped to the user service and /api/shop is mapped to the shop service. Zuul is a JVM-based router and server-side load balancer from Netflix.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Spring Cloud" scheme="https://lixhbs.gitee.io/blog/categories/Spring-Cloud/"/>
    
    
      <category term="Spring Cloud" scheme="https://lixhbs.gitee.io/blog/tags/Spring-Cloud/"/>
    
      <category term="Router and Filter" scheme="https://lixhbs.gitee.io/blog/tags/Router-and-Filter/"/>
    
  </entry>
  
  <entry>
    <title>【Spring Cloud】第一篇 Service Discovery | 服务发现 - Eureka</title>
    <link href="https://lixhbs.gitee.io/blog/sc-f-e-01/"/>
    <id>https://lixhbs.gitee.io/blog/sc-f-e-01/</id>
    <published>2018-10-22T10:41:43.000Z</published>
    <updated>2018-12-16T13:36:29.599Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Eureka 提供服务的注册，服务可以通过注册到<code>Eureka</code>然后被其他应用调用。</p></blockquote><a id="more"></a><p>看到Spring Cloud 的文档里面是先讲的是<code>Spring Cloud Config</code> ，为了方便，或者说参考其他大佬的教程，我也会把Config放到后面写。</p><h1 id="word-amp-phrase"><a href="#word-amp-phrase" class="headerlink" title="word &amp; phrase"></a>word &amp; phrase</h1><ul><li>include       确实是包含的意思，但是我觉得翻译（根据语境去翻译）成使用是不是更舒服些</li><li>setting up    配置</li><li>provides      提供</li><li>meta-data     元数据</li><li>such as       例如</li><li>Note          注意</li></ul><h1 id="Spring-Cloud-Netflix"><a href="#Spring-Cloud-Netflix" class="headerlink" title="Spring Cloud Netflix"></a>Spring Cloud Netflix</h1><p><a href="https://en.wikipedia.org/wiki/Netflix" target="_blank" rel="noopener">Netflix</a> 是一家媒体提供商，应该很厉害！</p><p>官网文档中先列出的是Eureka客户端，我尝试先写<code>Eureka Client</code> 发现会提示以下错误，应该是在请求 <code>Eureka server</code>的时候报错， 因为我们根本没有创建。所以我先看<code>Eureka server</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NFO 25402 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server</span><br><span class="line">ERROR 25402 --- [main] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error</span><br></pre></td></tr></table></figure></p><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p><strong>官方说明 Finchley的构建和工作环境应该是 <code>Spring Boot 2.0.x</code>, 预计不会在<code>Spring Boot 1.5.x</code> 中使用。</strong></p><blockquote><p>Finchley builds and works with Spring Boot 2.0.x, and is not expected to work with Spring Boot 1.5.x.       </p></blockquote><p><strong>Spring Cloud 需要使用Spring Boot，如果不会创建Spring Boot项目的看这里《<a href="../Spring-Boot-SI">Spring Boot | 使用Spring Initializr快速创建</a>》！</strong></p><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><ul><li><p>新建好Spring Boot后，删除src文件<br><img src="http://qiniuimages.aprcode.com/20181016165813.png" alt=""></p></li><li><p>在<code>pom.xml</code> 中添加 <code>Spring Cloud</code> 配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cyinfotech<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sc-f-e-01<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>sc-f-e-01<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">         <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Spring Cloud --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>Finchley.SR1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="Service-Discovery-Eureka-Server-服务发现：Eureka服务端"><a href="#Service-Discovery-Eureka-Server-服务发现：Eureka服务端" class="headerlink" title="Service Discovery: Eureka Server | 服务发现：Eureka服务端"></a>Service Discovery: Eureka Server | 服务发现：Eureka服务端</h2><h3 id="How-to-Include-Eureka-Server-项目中如何包含-Eureka-Server"><a href="#How-to-Include-Eureka-Server-项目中如何包含-Eureka-Server" class="headerlink" title="How to Include Eureka Server | 项目中如何包含 Eureka Server"></a>How to Include Eureka Server | 项目中如何包含 <code>Eureka Server</code></h3><ul><li><p>右键项目 &gt; New &gt; Module 新建 <code>eureka-server</code> 子工程<br><img src="http://qiniuimages.aprcode.com/20181016170056.png" alt=""><br><img src="http://qiniuimages.aprcode.com/20181016171250.png" alt=""></p></li><li><p>修改父工程<code>pom.xml</code>文件, 添加子工程。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>eureka-server<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>To include Eureka Server in your project, use the starter with a group ID of <code>org.springframework.cloud</code> and an <code>artifact ID of spring-cloud-starter-netflix-eureka-server</code>. See the <a href="http://projects.spring.io/spring-cloud/" target="_blank" rel="noopener">Spring Cloud Project page</a> for details on setting up your build system with the current Spring Cloud Release Train.   </p></blockquote><p>在项目中使用<code>Eureka Server</code>，需要配置 <code>pom.xml</code>, 根据你当前的Spring Cloud 版本在<a href="http://projects.spring.io/spring-cloud/" target="_blank" rel="noopener">Spring Cloud Project page</a>中可以查看详细说明。</p><p><code>eureka-server</code> 的 <code>pom.xml</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cyinfotech<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>eureka-server<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cyinfotech<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sc-f-e-01<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!--Eureka-Server--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="How-to-Run-a-Eureka-Server-如何启动-Eureka-Server"><a href="#How-to-Run-a-Eureka-Server-如何启动-Eureka-Server" class="headerlink" title="How to Run a Eureka Server | 如何启动 Eureka Server"></a>How to Run a Eureka Server | 如何启动 <code>Eureka Server</code></h3><p>在启动类添加 注解 <code>@EnableEurekaServer</code></p><ul><li>Modify <code>EurekaServerApplication</code> </li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyinfotech.eurekaserver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.builder.SpringApplicationBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaServer</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaServerApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> SpringApplicationBuilder(EurekaServerApplication.class).web(<span class="keyword">true</span>).run(args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Standalone-Mode-单机模式"><a href="#Standalone-Mode-单机模式" class="headerlink" title="Standalone Mode | 单机模式"></a>Standalone Mode | 单机模式</h3><ul><li>Add <code>application.yml</code> </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 8761 # 端口</span><br><span class="line"></span><br><span class="line">eureka:</span><br><span class="line">  instance:</span><br><span class="line">    hostname: localhost # 主机</span><br><span class="line">  client:</span><br><span class="line">    registerWithEureka: false #是否注册自己</span><br><span class="line">    fetchRegistry: false #是否注册自己</span><br><span class="line">    serviceUrl:</span><br><span class="line">      defaultZone: http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka/ # 服务地址</span><br></pre></td></tr></table></figure><ul><li><p>Start<br><img src="http://qiniuimages.aprcode.com/20181018110257.png" alt=""></p></li><li><p>Open <code>http://127.0.0.1:8761/</code> in your browser<br><img src="http://qiniuimages.aprcode.com/20181018110319.png" alt=""></p></li></ul><p>Instances currently registered with Eureka 是空的， 因为有没有服务注册!</p><h2 id="Service-Discovery-Eureka-Clients-服务发现：Eureka客户端"><a href="#Service-Discovery-Eureka-Clients-服务发现：Eureka客户端" class="headerlink" title="Service Discovery: Eureka Clients | 服务发现：Eureka客户端"></a>Service Discovery: Eureka Clients | 服务发现：Eureka客户端</h2><p>Eureka客户端可以理解为服务注册实际项目中需要曝光的服务。</p><h3 id="How-to-Include-Eureka-Client-如何使用Eureka客户端"><a href="#How-to-Include-Eureka-Client-如何使用Eureka客户端" class="headerlink" title="How to Include Eureka Client | 如何使用Eureka客户端"></a>How to Include Eureka Client | 如何使用Eureka客户端</h3><ul><li><p>右键项目 &gt; New &gt; Module 新建 <code>eureka-client</code> 子工程，和添加 server 一样</p></li><li><p>修改父工程<code>pom.xml</code>文件, 添加子工程。   </p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">module</span>&gt;</span>eureka-client<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>To include the Eureka Client in your project, use the starter with a group ID of <code>org.springframework.cloud</code> and an artifact ID of <code>spring-cloud-starter-netflix-eureka-client</code>. See the <a href="http://projects.spring.io/spring-cloud/" target="_blank" rel="noopener">Spring Cloud Project page</a>  for details on setting up your build system with the current Spring Cloud Release Train.</p></blockquote><p>要使用<code>Eureka Client</code> 就要添加配置文件，完整<code>pom.xml</code>配置文件如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cyinfotech<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>eureka-client<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cyinfotech<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sc-f-e-01<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--Eureka-Client--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Registering-with-Eureka-注册-Eureka"><a href="#Registering-with-Eureka-注册-Eureka" class="headerlink" title="Registering with Eureka | 注册 Eureka"></a>Registering with Eureka | 注册 Eureka</h3><blockquote><p>When a client registers with Eureka, it provides meta-data about itself — such as host, port, health indicator URL, home page, and other details. Eureka receives heartbeat messages from each instance belonging to a service. If the heartbeat fails over a configurable timetable, the instance is normally removed from the registry.</p></blockquote><p>当注册Eureka时，它提供一些包括自己的源数据，例如：主机、端口、监听(心跳)地址、主页和其它详细信息。Eureka 通过每个实例的服务接受心跳消息。 如果心跳在配置的时间失败结束，那这个实例通常会删除注册。</p><p>修改启动<code>Eureka Client</code> 启动类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyinfotech.eurekaclient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.builder.SpringApplicationBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaClientApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">home</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello world"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> SpringApplicationBuilder(EurekaClientApplication.class).web(<span class="keyword">true</span>).run(args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>Note that the preceding example shows a normal Spring Boot application. By having <code>spring-cloud-starter-netflix-eureka-client</code> on the classpath, your application automatically registers with the Eureka Server. Configuration is required to locate the Eureka server, as shown in the following example:</p></blockquote><p>注意前面的正常的 <code>Spring boot</code> 程序， 你的应用程序中添加<code>spring-cloud-starter-netflix-eureka-client</code>后将自动注册到<code>Eureka Server</code>, 如下所示：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8781</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    serviceUrl:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://localhost:8761/eureka/</span></span><br></pre></td></tr></table></figure><p>启动步骤：<br>    1.EurekaServerApplication<br>    2.EurekaClientApplication</p><p><a href="http://localhost:8761/" target="_blank" rel="noopener">http://localhost:8761/</a><br><img src="http://qiniuimages.aprcode.com/20181022174105.png" alt=""></p><p><a href="http://192.168.5.165:8781/" target="_blank" rel="noopener">http://192.168.5.165:8781/</a><br><img src="http://qiniuimages.aprcode.com/20181022174136.png" alt=""></p><p>以上 Eureka 的服务端和客户端（注册与发现）就讲完了，我也是第一次这么认真看官方文档，其实看下来发现也不难，其他人的文档里面也无非就直译了官方文档，但是每个人的理解不一样，所以还是推荐自己去看原版文档， 没有想象的那么难。</p><p>欢迎关注我的公众号，跟我留言。<br><img src="http://qiniuimages.aprcode.com/qrcode_for_gh_22df58e4959f_258.jpg" alt=""></p><hr><p>博客地址：<a href="https://blog.aprcode.com/sc-f-e-01/" target="_blank" rel="noopener">https://blog.aprcode.com/sc-f-e-01/</a><br>教程源码Github地址：<a href="https://github.com/lixhbs/SpringCloudEnglish/tree/master/sc-f-e-01" target="_blank" rel="noopener">sc-f-e-01</a><br>教程源码Gitee地址：<a href="https://gitee.com/Lixhbs/SpringCloudEnglish/tree/master/sc-f-e-01" target="_blank" rel="noopener">sc-f-e-01</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Eureka 提供服务的注册，服务可以通过注册到&lt;code&gt;Eureka&lt;/code&gt;然后被其他应用调用。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Spring Cloud" scheme="https://lixhbs.gitee.io/blog/categories/Spring-Cloud/"/>
    
    
      <category term="Spring Cloud" scheme="https://lixhbs.gitee.io/blog/tags/Spring-Cloud/"/>
    
  </entry>
  
  <entry>
    <title>【Spring Cloud】目录篇 - 我是「煮酒泛舟」</title>
    <link href="https://lixhbs.gitee.io/blog/sc-f-e-00/"/>
    <id>https://lixhbs.gitee.io/blog/sc-f-e-00/</id>
    <published>2018-10-21T13:32:27.000Z</published>
    <updated>2018-12-16T13:36:41.432Z</updated>
    
    <content type="html"><![CDATA[<p>按照官方的文档学习<code>Spring Cloud</code>，官方的一般都会比较简单，不是很适合初学者，我在学习的时候也会参考别人的文章，但是也希望自己能独立的阅读官方文档学习最新的知识。<br>也希望有大佬能告诉学习英文的方式！！！</p><a id="more"></a><p>教程源码Github地址：<a href="https://github.com/lixhubei/SpringCloudEnglish" target="_blank" rel="noopener">https://github.com/lixhubei/SpringCloudEnglish</a><br>教程源码Gitee地址：<a href="https://gitee.com/Lixhbs/SpringCloudEnglish" target="_blank" rel="noopener">https://gitee.com/Lixhbs/SpringCloudEnglish</a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>Spring Boot: v2.0.4</li><li>Spring Cloud: Finchley SR1</li><li>IDEA</li><li>JDK 1.8</li></ul><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>目前网上<code>Spring Cloud</code>系列教程还是比较丰富的，例如：<a href="http://blog.didispace.com/Spring-Cloud%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/" target="_blank" rel="noopener">程序员DD - Spring Cloud基础教程</a>、<a href="https://blog.csdn.net/forezp/article/details/70148833" target="_blank" rel="noopener">方志朋 - 史上最简单的 SpringCloud 教程</a>等大佬的系列文章。</p><p>上面两位大佬的教程让我逐渐的了解并认识了<code>Spring Cloud</code>，学习任何一项技能还是希望能理解的透透的，所以根据<a href="https://www.google.com.ph/search?newwindow=1&amp;safe=active&amp;hl=zh-CN&amp;ei=v3yYW4apBcjY0gKSsLHIBQ&amp;q=%E8%B4%B9%E6%9B%BC%E6%8A%80%E5%B7%A7&amp;oq=%E8%B4%B9%E6%9B%BC%E6%8A%80%E5%B7%A7&amp;gs_l=psy-ab.3...7422.7422.0.7971.1.1.0.0.0.0.366.366.3-1.1.0....0...1c.2.64.psy-ab..0.0.0....0.I32RkqLOV84" target="_blank" rel="noopener">终极学习法——费曼技巧</a>我将我所了解的<code>Spring Cloud</code>写下来。</p><p>由于英语对程序员是非常重要的,可以看下这位大佬的文章<a href="http://blog.jobbole.com/45296/#comment-158686" target="_blank" rel="noopener">老码农教你学英语</a>，所以这里我也开始我阅读英文文档的第一步，如果大家有好的学习方法可以和我交流。以前也有无数次学习英语的冲动，每次都拿起各种背单词的APP苦学一两周，然并卵，<code>Spring Cloud</code>系列教程，我会以官方英文文档为主，和大家一起去搭建<code>Spring Cloud框架</code>。</p><h2 id="Spring-Cloud-简介"><a href="#Spring-Cloud-简介" class="headerlink" title="Spring Cloud 简介"></a>Spring Cloud 简介</h2><p>个人理解为多个功能组成的一个微服务解决方案的体系，里面包括服务发现、服务消费、路由、断路器等等工具，看发布的版本就能看出，Spring Cloud 不是某一种技术，而是集很多东西为一体的，当某些功能发布了版本后，Spring Cloud才会跟着发布版本。</p><h2 id="为什么去看英文文档"><a href="#为什么去看英文文档" class="headerlink" title="为什么去看英文文档"></a>为什么去看英文文档</h2><p>为什么去看英文文档，就只有一个原因，因为最新的技术都是英文版的。<br>怎么去学，我之前有看过一个人的（突然忘记名字了，想起来再不上来）有个透析法，但是要有一定的英语基础，由于我算是没有基础的所以我想结合这个透析法，然后自己琢磨下如何去学，因为技术文章和其他的文章有点不一样，技术文章里面有很多的专业术语,但是这些术语是有限的，所以看得多了就应该就会了。我们这种应该属于哑巴英语！</p><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li><a href="../sc-f-e-00">【Spring Cloud】目录篇 我是「煮酒泛舟」</a></li><li><a href="../sc-f-e-01">【Spring Cloud】第一篇 Service Discovery | 服务发现 - Eureka</a></li><li><a href="../sc-f-e-02">【Spring Cloud】第二篇 Circuit Breaker | 断路器 - Hystrix</a></li><li><a href="../sc-f-e-03">【Spring Cloud】第三篇 Client Side Load Balancer | 负载均衡 - Ribbon</a>  </li><li><a href="../sc-f-e-04">【Spring cloud】第四篇 Router and Filter | 路由和过滤器 - Zuul</a></li></ul><p>欢迎关注我的公众号，跟我留言。<br><img src="http://qiniuimages.aprcode.com/qrcode_for_gh_22df58e4959f_258.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;按照官方的文档学习&lt;code&gt;Spring Cloud&lt;/code&gt;，官方的一般都会比较简单，不是很适合初学者，我在学习的时候也会参考别人的文章，但是也希望自己能独立的阅读官方文档学习最新的知识。&lt;br&gt;也希望有大佬能告诉学习英文的方式！！！&lt;/p&gt;
    
    </summary>
    
      <category term="Spring Cloud" scheme="https://lixhbs.gitee.io/blog/categories/Spring-Cloud/"/>
    
    
      <category term="Spring Cloud" scheme="https://lixhbs.gitee.io/blog/tags/Spring-Cloud/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot | 使用Spring Initializr快速创建</title>
    <link href="https://lixhbs.gitee.io/blog/Spring-Boot-SI/"/>
    <id>https://lixhbs.gitee.io/blog/Spring-Boot-SI/</id>
    <published>2018-10-16T03:23:08.000Z</published>
    <updated>2018-12-20T03:56:22.589Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>简单快速搭建启动Spring Boot项目</p></blockquote><a id="more"></a><p><a href="https://github.com/lixhbs/SpringBoot/tree/master/spring-boot-si" target="_blank" rel="noopener">教程源码Github地址</a><br><a href="https://gitee.com/Lixhbs/SpringBoot/tree/master/spring-boot-si" target="_blank" rel="noopener">教程源码Gitee地址</a></p><ul><li><p>Create New Prject | 创建新项目<br><img src="http://qiniuimages.aprcode.com/20181016113451.png" alt=""></p></li><li><p>选择 Spring Initializr<br><img src="http://qiniuimages.aprcode.com/20181016113609.png" alt=""></p></li><li><p>填好信息选择下一步<br><img src="http://qiniuimages.aprcode.com/20181016114713.png" alt=""></p></li><li><p>可以选择一些工具<br><img src="http://qiniuimages.aprcode.com/20181016114810.png" alt=""></p></li><li><p>创建好后项目会开始初始化，等待一下<br><img src="http://qiniuimages.aprcode.com/20181016115115.png" alt=""></p></li><li><p>修改启动类 <code>SpringBootSiApplication</code></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyinfotech.springbootsi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootSiApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(SpringBootSiApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getIndex</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello Spring Boot"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>初始化完成后右上角启动|调试项目<br><img src="http://qiniuimages.aprcode.com/20181016115258.png" alt=""></p></li><li><p>启动信息<br><img src="http://qiniuimages.aprcode.com/20181016115339.png" alt=""></p></li><li><p>页面访问 ‘<a href="http://localhost:8080/&#39;" target="_blank" rel="noopener">http://localhost:8080/&#39;</a></p></li></ul><p><img src="http://qiniuimages.aprcode.com/20181016133457.png" alt=""></p><hr><p>欢迎关注我的公众号，跟我留言。<br><img src="http://qiniuimages.aprcode.com/qrcode_for_gh_22df58e4959f_258.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;简单快速搭建启动Spring Boot项目&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Spring Boot" scheme="https://lixhbs.gitee.io/blog/tags/Spring-Boot/"/>
    
  </entry>
  
</feed>
