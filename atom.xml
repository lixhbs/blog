<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>煮酒泛舟的技术栈</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lixhbs.gitee.io/blog/"/>
  <updated>2018-10-28T03:01:13.588Z</updated>
  <id>https://lixhbs.gitee.io/blog/</id>
  
  <author>
    <name>煮酒泛舟</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【Spring Cloud】第三篇 Client Side Load Balancer | 负载均衡 - Ribbon</title>
    <link href="https://lixhbs.gitee.io/blog/sc-f-e-03/"/>
    <id>https://lixhbs.gitee.io/blog/sc-f-e-03/</id>
    <published>2018-10-28T03:01:13.588Z</published>
    <updated>2018-10-28T03:01:13.588Z</updated>
    
    <content type="html"><![CDATA[<p>Ribbon是一个负载均衡的客户端，用来提高系统的处理能力，在之后的章节会讲到<code>Feign</code>它已经包含<code>Ribbon</code>。</p><a id="more"></a>  <p>本教程在<a href="https://github.com/lixhbs/SpringCloudEnglish/tree/master/sc-f-e-02" target="_blank" rel="noopener">【Spring Cloud】第二篇 Circuit Breaker | 断路器 - Hystrix</a>的基础上添加代码。</p><h1 id="word-amp-phrase"><a href="#word-amp-phrase" class="headerlink" title="word &amp; phrase"></a>word &amp; phrase</h1><ul><li>load balancer 负载均衡器</li><li>section 章节</li><li>A central concept 核心想法</li></ul><h3 id="创建工程-server-ribbon"><a href="#创建工程-server-ribbon" class="headerlink" title="创建工程 server-ribbon"></a>创建工程 <code>server-ribbon</code></h3><p><img src="http://paz1myrij.bkt.clouddn.com/20181028090945.png" alt=""></p><h3 id="How-to-Include-Ribbon-项目中如何包含-Ribbon"><a href="#How-to-Include-Ribbon-项目中如何包含-Ribbon" class="headerlink" title="How to Include Ribbon | 项目中如何包含 Ribbon"></a>How to Include Ribbon | 项目中如何包含 <code>Ribbon</code></h3><blockquote><p>To include Ribbon in your project, use the starter with a group ID of <code>org.springframework.cloud</code> and an artifact ID of <code>spring-cloud-starter-netflix-ribbon</code>. See the <a href="http://projects.spring.io/spring-cloud/" target="_blank" rel="noopener">Spring Cloud Project page</a> for details on setting up your build system with the current Spring Cloud Release Train.</p></blockquote><p>添加<code>group ID</code>到 <code>pom.xml</code>，注意自己的版本。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cyinfotech<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>server-ribbon<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>server-ribbon<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cyinfotech<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sc-f-e-03<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-ribbon<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改父工程<code>pom.xml</code>，在<code>modules</code>添加<code>server-ribbon</code> </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">module</span>&gt;</span>server-ribbon<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>修改配置文件 <code>application.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8783</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    serviceUrl:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://localhost:8761/eureka/</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">server-ribbon</span></span><br></pre></td></tr></table></figure></li><li><p>修改启动类<code>ServerRibbonApplication</code>，添加<code>RestTemplate</code>    </p></li></ul><p><code>@LoadBalanced</code>的作用是让这个请求有负载均衡的能力。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyinfotech.serverribbon;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.loadbalancer.LoadBalanced;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerRibbonApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ServerRibbonApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@LoadBalanced</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestTemplate <span class="title">restTemplate</span> <span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>添加<code>HelloCyInfo</code>服务类，调用其他实例，实现负载均衡</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">package com.cyinfotech.serverribbon;</span><br><span class="line"></span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.stereotype.Service;</span><br><span class="line">import org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author 煮酒泛舟.</span><br><span class="line"> * @title</span><br><span class="line"> * @program sc-f-e-03</span><br><span class="line"> * @description</span><br><span class="line"> * @createtime 2018-10-28 09:38</span><br><span class="line"> */</span><br><span class="line">@Service</span><br><span class="line">public class HelloCyInfo &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    public String helloCYIT(String name) &#123;</span><br><span class="line">        return restTemplate.getForObject(&quot;http://server-hystrix/?name=&quot;+name,String.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>添加<code>RibbonController</code>类，调用<code>service</code></p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">package com.cyinfotech.serverribbon;</span><br><span class="line"></span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line">import org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author 煮酒泛舟.</span><br><span class="line"> * @title</span><br><span class="line"> * @program sc-f-e-03</span><br><span class="line"> * @description</span><br><span class="line"> * @createtime 2018-10-28 09:44</span><br><span class="line"> */</span><br><span class="line">@RestController</span><br><span class="line">public class RibbonController &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    HelloCyInfo helloCyInfo;</span><br><span class="line"></span><br><span class="line">    @RequestMapping(&quot;/&quot;)</span><br><span class="line">    public String hiCYIT ( @RequestParam String name) &#123;</span><br><span class="line"></span><br><span class="line">        return helloCyInfo.helloCYIT(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>为了效果明显我们修改下<code>server-hystrix</code>的代码，将实例的端口打印出来；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyinfotech.serverhystrix;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.builder.SpringApplicationBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableCircuitBreaker</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerHystrixApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> SpringApplicationBuilder(ServerHystrixApplication.class).web(<span class="keyword">true</span>).run(args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    StoreIntegration storeIntegration;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;server.port&#125;"</span>)</span><br><span class="line">    String port;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getHi</span> <span class="params">(@RequestParam String name)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"HI - "</span> + name + <span class="string">"， port:"</span> + port + <span class="string">", By server-hystrix."</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>先启动 <code>eureka-server</code>，再启动 <code>server-hystrix</code>, 然后启动 <code>server-ribbon</code> 访问浏览器 <code>http://localhost:8783/?name=cyit</code></p><blockquote><p>HI - cyit， port:8782, By server-hystrix.</p></blockquote></li><li><p>修改实例<code>server-hystrix</code>的端口然后启动，如果启动不了需要在<code>Configurations</code>去掉<code>Single instance only</code>.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8786</span></span><br></pre></td></tr></table></figure></li></ul><p>`</p><ul><li>多次访问<code>http://localhost:8783/?name=cyit</code> ， 页面会交替显示端口号。<blockquote><p>HI - cyit， port:8782, By server-hystrix.<br>HI - cyit， port:8786, By server-hystrix.</p></blockquote></li></ul><p>本篇教程就到这，至于更深的教程我会加紧学习然后写出来。</p><p>欢迎关注我的公众号，跟我留言。<br><img src="http://paz1myrij.bkt.clouddn.com/qrcode_for_gh_22df58e4959f_258.jpg" alt=""></p><hr><p>博客地址：<a href="https://blog.aprcode.com/sc-f-e-03/" target="_blank" rel="noopener">https://blog.aprcode.com/sc-f-e-03/</a><br>教程源码Github地址：<a href="https://github.com/lixhbs/SpringCloudEnglish/tree/master/sc-f-e-03" target="_blank" rel="noopener">sc-f-e-03</a><br>教程源码Gitee地址：<a href="https://gitee.com/Lixhbs/SpringCloudEnglish/tree/master/sc-f-e-03" target="_blank" rel="noopener">sc-f-e-03</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Ribbon是一个负载均衡的客户端，用来提高系统的处理能力，在之后的章节会讲到&lt;code&gt;Feign&lt;/code&gt;它已经包含&lt;code&gt;Ribbon&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="Spring Cloud" scheme="https://lixhbs.gitee.io/blog/categories/Spring-Cloud/"/>
    
      <category term="Ribbon" scheme="https://lixhbs.gitee.io/blog/categories/Spring-Cloud/Ribbon/"/>
    
    
      <category term="Spring Cloud" scheme="https://lixhbs.gitee.io/blog/tags/Spring-Cloud/"/>
    
  </entry>
  
  <entry>
    <title>【Spring Cloud】第二篇 Circuit Breaker | 断路器 - Hystrix</title>
    <link href="https://lixhbs.gitee.io/blog/sc-f-e-02/"/>
    <id>https://lixhbs.gitee.io/blog/sc-f-e-02/</id>
    <published>2018-10-28T02:42:57.770Z</published>
    <updated>2018-10-28T02:42:57.770Z</updated>
    
    <content type="html"><![CDATA[<p>服务意外跪掉后的处理方式，不至于所有的功能失效。</p><a id="more"></a>  <p>官方网站的这个图很形象,当服务跪掉后有一个fallback返回。<br><img src="http://paz1myrij.bkt.clouddn.com/HystrixFallback.png" alt=""></p><p>本教程在<a href="https://github.com/lixhbs/SpringCloudEnglish/tree/master/sc-f-e-01" target="_blank" rel="noopener">【参照官方英文文档学Spring Cloud】第一篇 Service Discovery | 服务发现 - Eureka</a>的基础上添加代码。</p><h1 id="word-amp-phrase"><a href="#word-amp-phrase" class="headerlink" title="word &amp; phrase"></a>word &amp; phrase</h1><ul><li>Circuit Breaker 中断回路</li></ul><h3 id="创建工程-server-hystrix"><a href="#创建工程-server-hystrix" class="headerlink" title="创建工程 server-hystrix"></a>创建工程 <code>server-hystrix</code></h3><p><img src="http://paz1myrij.bkt.clouddn.com/20181024090732.png" alt=""></p><h3 id="How-to-Include-Hystrix-项目中如何包含-Hystrix"><a href="#How-to-Include-Hystrix-项目中如何包含-Hystrix" class="headerlink" title="How to Include Hystrix | 项目中如何包含 Hystrix"></a>How to Include Hystrix | 项目中如何包含 <code>Hystrix</code></h3><blockquote><p>To include Hystrix in your project, use the starter with a group ID of <code>org.springframework.cloud</code> and a artifact ID of <code>spring-cloud-starter-netflix-hystrix</code>. See the Spring Cloud Project page for details on setting up your build system with the current Spring Cloud Release Train.</p></blockquote><p>如何包含？第一步都一样，添加<code>group ID</code>到 <code>pom.xml</code>，注意自己的版本，我就不在翻译了。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cyinfotech<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>server-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>server-hystrix<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cyinfotech<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sc-f-e-02<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!--Eureka-Client--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改父工程<code>pom.xml</code>，在<code>modules</code>添加<code>server-hystrix</code> </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">module</span>&gt;</span>server-hystrix<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>The <code>@HystrixCommand</code> is provided by a Netflix contrib library called “javanica”. Spring Cloud automatically wraps Spring beans with that annotation in a proxy that is connected to the Hystrix circuit breaker. The circuit breaker calculates when to open and close the circuit and what to do in case of a failure.</p></blockquote><p>官方给的例子很直观，添加<code>@HystrixCommand</code>注解，当服务调用失败的时候会调用<code>fallbackMethod</code>的服务。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@Component</span><br><span class="line">public class StoreIntegration &#123;</span><br><span class="line"></span><br><span class="line">    @HystrixCommand(fallbackMethod = &quot;defaultStores&quot;)</span><br><span class="line">    public Object getStores(Map&lt;String, Object&gt; parameters) &#123;</span><br><span class="line">        //do stuff that might fail</span><br><span class="line">        // 做那些可能失败的事情</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Object defaultStores(Map&lt;String, Object&gt; parameters) &#123;</span><br><span class="line">        return /* something useful */;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>修改下官方<code>example</code>   </p><ul><li><p>新建类<code>StoreIntegration</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">package com.cyinfotech.serverhystrix;</span><br><span class="line"></span><br><span class="line">import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;</span><br><span class="line">import org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author 煮酒泛舟.</span><br><span class="line"> * @title Component</span><br><span class="line"> * @program sc-f-e-02</span><br><span class="line"> * @description</span><br><span class="line"> * @createtime 2018-10-24 09:28</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">@Component</span><br><span class="line">public class StoreIntegration &#123;</span><br><span class="line"></span><br><span class="line">    @HystrixCommand(fallbackMethod = &quot;defaultStores&quot;)</span><br><span class="line">    public Object getStores(Map&lt;String, Object&gt; parameters) &#123;</span><br><span class="line"></span><br><span class="line">        //do stuff that might fail</span><br><span class="line">        throw new RuntimeException(&quot;call service fail.&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Object defaultStores(Map&lt;String, Object&gt; parameters) &#123;</span><br><span class="line"></span><br><span class="line">        /* something useful */</span><br><span class="line">        return &quot;Sorry, error!!! fallback defaultStores service！&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改启动类<code>ServerHystrixApplication</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyinfotech.serverhystrix;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.builder.SpringApplicationBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableCircuitBreaker</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServerHystrixApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> SpringApplicationBuilder(ServerHystrixApplication.class).web(<span class="keyword">true</span>).run(args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    StoreIntegration storeIntegration;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getHi</span> <span class="params">(Map&lt;String, Object&gt; parameters)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> storeIntegration.getStores(parameters);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件 <code>application.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8782</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    serviceUrl:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://localhost:8761/eureka/</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">  application:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">server-hystrix</span></span><br></pre></td></tr></table></figure></li><li><p>先启动 <code>eureka-server</code>，再启动 <code>server-hystrix</code>, 访问浏览器 <code>http://localhost:8782/</code>，显示的是调用<code>defaultStores</code>服务的返回值.</p><blockquote><p>Sorry, error!!! fallback defaultStores service！</p></blockquote></li></ul><p>本篇教程就到这，至于更深的教程我会加紧学习然后写出来。</p><p>欢迎关注我的公众号，跟我留言。<br><img src="http://paz1myrij.bkt.clouddn.com/qrcode_for_gh_22df58e4959f_258.jpg" alt=""></p><hr><p>博客地址：<a href="https://blog.aprcode.com/sc-f-e-02/" target="_blank" rel="noopener">https://blog.aprcode.com/sc-f-e-02/</a><br>教程源码Github地址：<a href="https://github.com/lixhbs/SpringCloudEnglish/tree/master/sc-f-e-02" target="_blank" rel="noopener">sc-f-e-02</a><br>教程源码Gitee地址：<a href="https://gitee.com/Lixhbs/SpringCloudEnglish/tree/master/sc-f-e-02" target="_blank" rel="noopener">sc-f-e-02</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;服务意外跪掉后的处理方式，不至于所有的功能失效。&lt;/p&gt;
    
    </summary>
    
      <category term="Spring Cloud" scheme="https://lixhbs.gitee.io/blog/categories/Spring-Cloud/"/>
    
    
      <category term="Spring Cloud" scheme="https://lixhbs.gitee.io/blog/tags/Spring-Cloud/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot | 使用Spring Initializr快速创建</title>
    <link href="https://lixhbs.gitee.io/blog/Spring-Boot-SI/"/>
    <id>https://lixhbs.gitee.io/blog/Spring-Boot-SI/</id>
    <published>2018-10-16T03:23:08.000Z</published>
    <updated>2018-10-23T06:30:20.398Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>简单快速搭建启动Spring Boot项目</p></blockquote><a id="more"></a><p><a href="https://github.com/lixhbs/SpringBoot/tree/master/spring-boot-si" target="_blank" rel="noopener">教程源码Github地址</a><br><a href="https://gitee.com/Lixhbs/SpringBoot/tree/master/spring-boot-si" target="_blank" rel="noopener">教程源码Gitee地址</a></p><ul><li><p>Create New Prject | 创建新项目<br><img src="http://paz1myrij.bkt.clouddn.com/20181016113451.png" alt=""></p></li><li><p>选择 Spring Initializr<br><img src="http://paz1myrij.bkt.clouddn.com/20181016113609.png" alt=""></p></li><li><p>填好信息选择下一步<br><img src="http://paz1myrij.bkt.clouddn.com/20181016114713.png" alt=""></p></li><li><p>可以选择一些工具<br><img src="http://paz1myrij.bkt.clouddn.com/20181016114810.png" alt=""></p></li><li><p>创建好后项目会开始初始化，等待一下<br><img src="http://paz1myrij.bkt.clouddn.com/20181016115115.png" alt=""></p></li><li><p>修改启动类 <code>SpringBootSiApplication</code></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyinfotech.springbootsi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBootSiApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(SpringBootSiApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getIndex</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello Spring Boot"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>初始化完成后右上角启动|调试项目<br><img src="http://paz1myrij.bkt.clouddn.com/20181016115258.png" alt=""></p></li><li><p>启动信息<br><img src="http://paz1myrij.bkt.clouddn.com/20181016115339.png" alt=""></p></li><li><p>页面访问 ‘<a href="http://localhost:8080/&#39;" target="_blank" rel="noopener">http://localhost:8080/&#39;</a></p></li></ul><p><img src="http://paz1myrij.bkt.clouddn.com/20181016133457.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;简单快速搭建启动Spring Boot项目&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Spring Boot" scheme="https://lixhbs.gitee.io/blog/categories/Spring-Boot/"/>
    
    
      <category term="Spring Boot" scheme="https://lixhbs.gitee.io/blog/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>【Spring Cloud】第一篇 Service Discovery | 服务发现 - Eureka</title>
    <link href="https://lixhbs.gitee.io/blog/sc-f-e-01/"/>
    <id>https://lixhbs.gitee.io/blog/sc-f-e-01/</id>
    <published>2018-09-29T10:41:43.000Z</published>
    <updated>2018-10-28T03:18:36.468Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Eureka 提供服务的注册，服务可以通过注册到<code>Eureka</code>然后被其他应用调用。</p></blockquote><a id="more"></a><p>看到Spring Cloud 的文档里面是先讲的是<code>Spring Cloud Config</code> ，为了方便，或者说参考其他大佬的教程，我也会把Config放到后面写。</p><h1 id="word-amp-phrase"><a href="#word-amp-phrase" class="headerlink" title="word &amp; phrase"></a>word &amp; phrase</h1><ul><li>include       确实是包含的意思，但是我觉得翻译（根据语境去翻译）成使用是不是更舒服些</li><li>setting up    配置</li><li>provides      提供</li><li>meta-data     元数据</li><li>such as       例如</li><li>Note          注意</li></ul><h1 id="Spring-Cloud-Netflix"><a href="#Spring-Cloud-Netflix" class="headerlink" title="Spring Cloud Netflix"></a>Spring Cloud Netflix</h1><p><a href="https://en.wikipedia.org/wiki/Netflix" target="_blank" rel="noopener">Netflix</a> 是一家媒体提供商，应该很厉害！</p><p>官网文档中先列出的是Eureka客户端，我尝试先写<code>Eureka Client</code> 发现会提示以下错误，应该是在请求 <code>Eureka server</code>的时候报错， 因为我们根本没有创建。所以我先看<code>Eureka server</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NFO 25402 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server</span><br><span class="line">ERROR 25402 --- [main] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error</span><br></pre></td></tr></table></figure></p><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p><strong>官方说明 Finchley的构建和工作环境应该是 <code>Spring Boot 2.0.x</code>, 预计不会在<code>Spring Boot 1.5.x</code> 中使用。</strong></p><blockquote><p>Finchley builds and works with Spring Boot 2.0.x, and is not expected to work with Spring Boot 1.5.x.       </p></blockquote><p><strong>Spring Cloud 需要使用Spring Boot，如果不会创建Spring Boot项目的看这里《<a href="../Spring-Boot-SI">Spring Boot | 使用Spring Initializr快速创建</a>》！</strong></p><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><ul><li><p>新建好Spring Boot后，删除src文件<br><img src="http://paz1myrij.bkt.clouddn.com/20181016165813.png" alt=""></p></li><li><p>在<code>pom.xml</code> 中添加 <code>Spring Cloud</code> 配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cyinfotech<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sc-f-e-01<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>sc-f-e-01<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">         <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Spring Cloud --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>Finchley.SR1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="Service-Discovery-Eureka-Server-服务发现：Eureka服务端"><a href="#Service-Discovery-Eureka-Server-服务发现：Eureka服务端" class="headerlink" title="Service Discovery: Eureka Server | 服务发现：Eureka服务端"></a>Service Discovery: Eureka Server | 服务发现：Eureka服务端</h2><h3 id="How-to-Include-Eureka-Server-项目中如何包含-Eureka-Server"><a href="#How-to-Include-Eureka-Server-项目中如何包含-Eureka-Server" class="headerlink" title="How to Include Eureka Server | 项目中如何包含 Eureka Server"></a>How to Include Eureka Server | 项目中如何包含 <code>Eureka Server</code></h3><ul><li><p>右键项目 &gt; New &gt; Module 新建 <code>eureka-server</code> 子工程<br><img src="http://paz1myrij.bkt.clouddn.com/20181016170056.png" alt=""><br><img src="http://paz1myrij.bkt.clouddn.com/20181016171250.png" alt=""></p></li><li><p>修改父工程<code>pom.xml</code>文件, 添加子工程。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span>&gt;</span>eureka-server<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>To include Eureka Server in your project, use the starter with a group ID of <code>org.springframework.cloud</code> and an <code>artifact ID of spring-cloud-starter-netflix-eureka-server</code>. See the <a href="http://projects.spring.io/spring-cloud/" target="_blank" rel="noopener">Spring Cloud Project page</a> for details on setting up your build system with the current Spring Cloud Release Train.   </p></blockquote><p>在项目中使用<code>Eureka Server</code>，需要配置 <code>pom.xml</code>, 根据你当前的Spring Cloud 版本在<a href="http://projects.spring.io/spring-cloud/" target="_blank" rel="noopener">Spring Cloud Project page</a>中可以查看详细说明。</p><p><code>eureka-server</code> 的 <code>pom.xml</code><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cyinfotech<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>eureka-server<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cyinfotech<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sc-f-e-01<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!--Eureka-Server--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="How-to-Run-a-Eureka-Server-如何启动-Eureka-Server"><a href="#How-to-Run-a-Eureka-Server-如何启动-Eureka-Server" class="headerlink" title="How to Run a Eureka Server | 如何启动 Eureka Server"></a>How to Run a Eureka Server | 如何启动 <code>Eureka Server</code></h3><p>在启动类添加 注解 <code>@EnableEurekaServer</code></p><ul><li>Modify <code>EurekaServerApplication</code> </li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyinfotech.eurekaserver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.builder.SpringApplicationBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaServer</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaServerApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> SpringApplicationBuilder(EurekaServerApplication.class).web(<span class="keyword">true</span>).run(args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Standalone-Mode-单机模式"><a href="#Standalone-Mode-单机模式" class="headerlink" title="Standalone Mode | 单机模式"></a>Standalone Mode | 单机模式</h3><ul><li>Add <code>application.yml</code> </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 8761 # 端口</span><br><span class="line"></span><br><span class="line">eureka:</span><br><span class="line">  instance:</span><br><span class="line">    hostname: localhost # 主机</span><br><span class="line">  client:</span><br><span class="line">    registerWithEureka: false #是否注册自己</span><br><span class="line">    fetchRegistry: false #是否注册自己</span><br><span class="line">    serviceUrl:</span><br><span class="line">      defaultZone: http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka/ # 服务地址</span><br></pre></td></tr></table></figure><ul><li><p>Start<br><img src="http://paz1myrij.bkt.clouddn.com/20181018110257.png" alt=""></p></li><li><p>Open <code>http://127.0.0.1:8761/</code> in your browser<br><img src="http://paz1myrij.bkt.clouddn.com/20181018110319.png" alt=""></p></li></ul><p>Instances currently registered with Eureka 是空的， 因为有没有服务注册!</p><h2 id="Service-Discovery-Eureka-Clients-服务发现：Eureka客户端"><a href="#Service-Discovery-Eureka-Clients-服务发现：Eureka客户端" class="headerlink" title="Service Discovery: Eureka Clients | 服务发现：Eureka客户端"></a>Service Discovery: Eureka Clients | 服务发现：Eureka客户端</h2><p>Eureka客户端可以理解为服务注册实际项目中需要曝光的服务。</p><h3 id="How-to-Include-Eureka-Client-如何使用Eureka客户端"><a href="#How-to-Include-Eureka-Client-如何使用Eureka客户端" class="headerlink" title="How to Include Eureka Client | 如何使用Eureka客户端"></a>How to Include Eureka Client | 如何使用Eureka客户端</h3><ul><li><p>右键项目 &gt; New &gt; Module 新建 <code>eureka-client</code> 子工程，和添加 server 一样</p></li><li><p>修改父工程<code>pom.xml</code>文件, 添加子工程。   </p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">module</span>&gt;</span>eureka-client<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>To include the Eureka Client in your project, use the starter with a group ID of <code>org.springframework.cloud</code> and an artifact ID of <code>spring-cloud-starter-netflix-eureka-client</code>. See the <a href="http://projects.spring.io/spring-cloud/" target="_blank" rel="noopener">Spring Cloud Project page</a>  for details on setting up your build system with the current Spring Cloud Release Train.</p></blockquote><p>要使用<code>Eureka Client</code> 就要添加配置文件，完整<code>pom.xml</code>配置文件如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cyinfotech<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>eureka-client<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cyinfotech<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sc-f-e-01<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--Eureka-Client--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Registering-with-Eureka-注册-Eureka"><a href="#Registering-with-Eureka-注册-Eureka" class="headerlink" title="Registering with Eureka | 注册 Eureka"></a>Registering with Eureka | 注册 Eureka</h3><blockquote><p>When a client registers with Eureka, it provides meta-data about itself — such as host, port, health indicator URL, home page, and other details. Eureka receives heartbeat messages from each instance belonging to a service. If the heartbeat fails over a configurable timetable, the instance is normally removed from the registry.</p></blockquote><p>当注册Eureka时，它提供一些包括自己的源数据，例如：主机、端口、监听(心跳)地址、主页和其它详细信息。Eureka 通过每个实例的服务接受心跳消息。 如果心跳在配置的时间失败结束，那这个实例通常会删除注册。</p><p>修改启动<code>Eureka Client</code> 启动类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.cyinfotech.eurekaclient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.builder.SpringApplicationBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaClientApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">home</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello world"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> SpringApplicationBuilder(EurekaClientApplication.class).web(<span class="keyword">true</span>).run(args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>Note that the preceding example shows a normal Spring Boot application. By having <code>spring-cloud-starter-netflix-eureka-client</code> on the classpath, your application automatically registers with the Eureka Server. Configuration is required to locate the Eureka server, as shown in the following example:</p></blockquote><p>注意前面的正常的 <code>Spring boot</code> 程序， 你的应用程序中添加<code>spring-cloud-starter-netflix-eureka-client</code>后将自动注册到<code>Eureka Server</code>, 如下所示：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">8781</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line"><span class="attr">  client:</span></span><br><span class="line"><span class="attr">    serviceUrl:</span></span><br><span class="line"><span class="attr">      defaultZone:</span> <span class="attr">http://localhost:8761/eureka/</span></span><br></pre></td></tr></table></figure><p>启动步骤：<br>    1.EurekaServerApplication<br>    2.EurekaClientApplication</p><p><a href="http://localhost:8761/" target="_blank" rel="noopener">http://localhost:8761/</a><br><img src="http://paz1myrij.bkt.clouddn.com/20181022174105.png" alt=""></p><p><a href="http://192.168.5.165:8781/" target="_blank" rel="noopener">http://192.168.5.165:8781/</a><br><img src="http://paz1myrij.bkt.clouddn.com/20181022174136.png" alt=""></p><p>以上 Eureka 的服务端和客户端（注册与发现）就讲完了，我也是第一次这么认真看官方文档，其实看下来发现也不难，其他人的文档里面也无非就直译了官方文档，但是每个人的理解不一样，所以还是推荐自己去看原版文档， 没有想象的那么难。</p><p>欢迎关注我的公众号，跟我留言。<br><img src="http://paz1myrij.bkt.clouddn.com/qrcode_for_gh_22df58e4959f_258.jpg" alt=""></p><hr><p>博客地址：<a href="https://blog.aprcode.com/sc-f-e-01/" target="_blank" rel="noopener">https://blog.aprcode.com/sc-f-e-01/</a><br>教程源码Github地址：<a href="https://github.com/lixhbs/SpringCloudEnglish/tree/master/sc-f-e-01" target="_blank" rel="noopener">sc-f-e-01</a><br>教程源码Gitee地址：<a href="https://gitee.com/Lixhbs/SpringCloudEnglish/tree/master/sc-f-e-01" target="_blank" rel="noopener">sc-f-e-01</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Eureka 提供服务的注册，服务可以通过注册到&lt;code&gt;Eureka&lt;/code&gt;然后被其他应用调用。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Spring Cloud" scheme="https://lixhbs.gitee.io/blog/categories/Spring-Cloud/"/>
    
    
      <category term="Spring Cloud" scheme="https://lixhbs.gitee.io/blog/tags/Spring-Cloud/"/>
    
  </entry>
  
  <entry>
    <title>【Spring Cloud】目录篇 - 我是「煮酒泛舟」</title>
    <link href="https://lixhbs.gitee.io/blog/sc-f-e-00/"/>
    <id>https://lixhbs.gitee.io/blog/sc-f-e-00/</id>
    <published>2018-09-12T13:32:27.000Z</published>
    <updated>2018-10-28T03:14:27.419Z</updated>
    
    <content type="html"><![CDATA[<p>按照官方的文档学习<code>Spring Cloud</code>，官方的一般都会比较简单，不是很适合初学者，我在学习的时候也会参考别人的文章，但是也希望自己能独立的阅读官方文档学习最新的知识。<br>也希望有大佬能告诉学习英文的方式！！！</p><a id="more"></a><p>教程源码Github地址：<a href="https://github.com/lixhubei/SpringCloudEnglish" target="_blank" rel="noopener">https://github.com/lixhubei/SpringCloudEnglish</a><br>教程源码Gitee地址：<a href="https://gitee.com/Lixhbs/SpringCloudEnglish" target="_blank" rel="noopener">https://gitee.com/Lixhbs/SpringCloudEnglish</a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>Spring Boot: v2.0.4</li><li>Spring Cloud: Finchley SR1</li><li>IDEA</li><li>JDK 1.8</li></ul><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>目前网上<code>Spring Cloud</code>系列教程还是比较丰富的，例如：<a href="http://blog.didispace.com/Spring-Cloud%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/" target="_blank" rel="noopener">程序员DD - Spring Cloud基础教程</a>、<a href="https://blog.csdn.net/forezp/article/details/70148833" target="_blank" rel="noopener">方志朋 - 史上最简单的 SpringCloud 教程</a>等大佬的系列文章。</p><p>上面两位大佬的教程让我逐渐的了解并认识了<code>Spring Cloud</code>，学习任何一项技能还是希望能理解的透透的，所以根据<a href="https://www.google.com.ph/search?newwindow=1&amp;safe=active&amp;hl=zh-CN&amp;ei=v3yYW4apBcjY0gKSsLHIBQ&amp;q=%E8%B4%B9%E6%9B%BC%E6%8A%80%E5%B7%A7&amp;oq=%E8%B4%B9%E6%9B%BC%E6%8A%80%E5%B7%A7&amp;gs_l=psy-ab.3...7422.7422.0.7971.1.1.0.0.0.0.366.366.3-1.1.0....0...1c.2.64.psy-ab..0.0.0....0.I32RkqLOV84" target="_blank" rel="noopener">终极学习法——费曼技巧</a>我将我所了解的<code>Spring Cloud</code>写下来。</p><p>由于英语对程序员是非常重要的,可以看下这位大佬的文章<a href="http://blog.jobbole.com/45296/#comment-158686" target="_blank" rel="noopener">老码农教你学英语</a>，所以这里我也开始我阅读英文文档的第一步，如果大家有好的学习方法可以和我交流。以前也有无数次学习英语的冲动，每次都拿起各种背单词的APP苦学一两周，然并卵，<code>Spring Cloud</code>系列教程，我会以官方英文文档为主，和大家一起去搭建<code>Spring Cloud框架</code>。</p><h2 id="Spring-Cloud-简介"><a href="#Spring-Cloud-简介" class="headerlink" title="Spring Cloud 简介"></a>Spring Cloud 简介</h2><p>个人理解为多个功能组成的一个微服务解决方案的体系，里面包括服务发现、服务消费、路由、断路器等等工具，看发布的版本就能看出，Spring Cloud 不是某一种技术，而是集很多东西为一体的，当某些功能发布了版本后，Spring Cloud才会跟着发布版本。</p><h2 id="为什么去看英文文档"><a href="#为什么去看英文文档" class="headerlink" title="为什么去看英文文档"></a>为什么去看英文文档</h2><p>为什么去看英文文档，就只有一个原因，因为最新的技术都是英文版的。<br>怎么去学，我之前有看过一个人的（突然忘记名字了，想起来再不上来）有个透析法，但是要有一定的英语基础，由于我算是没有基础的所以我想结合这个透析法，然后自己琢磨下如何去学，因为技术文章和其他的文章有点不一样，技术文章里面有很多的专业术语,但是这些术语是有限的，所以看得多了就应该就会了。我们这种应该属于哑巴英语！</p><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li><a href="../sc-f-e-00">【Spring Cloud】目录篇 我是「煮酒泛舟」</a></li><li><a href="../sc-f-e-01">【Spring Cloud】第一篇 Service Discovery | 服务发现 - Eureka</a></li><li><a href="../sc-f-e-02">【Spring Cloud】第二篇 Circuit Breaker | 断路器 - Hystrix</a></li><li><a href="../sc-f-e-03">【Spring Cloud】第三篇 Client Side Load Balancer | 负载均衡 - Ribbon</a></li></ul><p>欢迎关注我的公众号，跟我留言。<br><img src="http://paz1myrij.bkt.clouddn.com/qrcode_for_gh_22df58e4959f_258.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;按照官方的文档学习&lt;code&gt;Spring Cloud&lt;/code&gt;，官方的一般都会比较简单，不是很适合初学者，我在学习的时候也会参考别人的文章，但是也希望自己能独立的阅读官方文档学习最新的知识。&lt;br&gt;也希望有大佬能告诉学习英文的方式！！！&lt;/p&gt;
    
    </summary>
    
      <category term="Spring Cloud" scheme="https://lixhbs.gitee.io/blog/categories/Spring-Cloud/"/>
    
    
      <category term="Spring Cloud" scheme="https://lixhbs.gitee.io/blog/tags/Spring-Cloud/"/>
    
  </entry>
  
</feed>
